{"version":3,"sources":["Components/slideshow/Image/poster11.jpg","Components/slideshow/Image/poster10.png","Components/slideshow/Image/poster8.jpg","Components/slideshow/Image/poster9.png","Components/slideshow/Image/poster12.jpg","Components/ui/Layout.js","Config.js","validators/index.js","Components/user/SignIn.js","Components/user/signUp.js","FrontEndAPIs/apiCore.js","FrontEndAPIs/storeManagerApi.js","Components/ui/cartHandler.js","Components/ui/DisplayRating.js","Components/ui/proCard.js","Components/ui/WishlistHandler.js","Components/ui/Search.js","Components/slideshow/SlideShow.js","Components/ui/Home.js","Components/ui/navBar.js","validators/UserRoute.js","FrontEndAPIs/apiUser.js","Components/user/UserDashboard.js","validators/AdminRoute.js","Components/user/AdminDashboard.js","Components/user/StoreManagerDashboard.js","validators/StoreManagerRoute.js","Components/admin/storeManagerSignup.js","FrontEndAPIs/adminApi.js","Components/admin/CategoryManagement.js","Components/ui/LikeDislikes.js","Components/ui/SingleComment.js","Components/ui/ReplyComment.js","Components/ui/Comments.js","Components/ui/Rating.js","Components/ui/Product.js","Components/storeManager/AddProduct.js","Components/storeManager/productManagement.js","Components/storeManager/updateProduct.js","Components/ui/Checkout.js","Components/ui/Cart.js","Components/ui/Wishlist.js","Components/user/UserProfile.js","Components/storeManager/updateStoreManager.js","Components/storeManager/orders.js","Components/Store/CheckBoxStore.js","Components/Store/ProductShop.js","Components/admin/updateAdmin.js","Routes.js","index.js"],"names":["module","exports","Layout","title","description","className","children","style","paddingTop","paddingBottom","API","process","signUp","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","console","log","isValidated","window","localStorage","getItem","parse","SignIn","useState","email","password","loading","redirectToRef","values","setValues","handleChange","val","e","target","value","submitForm","preventDefault","signIn","content","next","setItem","validate","location","reload","Alert","variant","display","userType","to","Container","Row","Col","Form","Group","controlId","Label","Control","onChange","type","placeholder","Button","onClick","SignUp","firstName","lastName","success","getProducts","orderBy","err","getCheckedResults","skip","limit","filters","bodyData","getCategories","emptyCart","removeItem","DisplayRating","props","allRatings","setRatings","loadRatings","useEffect","map","ratings","index","_id","pID","key","name","starCount","size","avg","ProductCard","productId","product","viewProductBtn","addToCartBtn","updateCartOpt","removeItemBtn","addToWishListBtn","removeWishItemBtn","setRun","f","run","undefined","redirect","setRedirect","count","setCount","wredirect","setWRedirect","addToCart","token","item","cart","push","Array","from","Set","p","id","find","addItem","addToWishList","wishlist","addWishItem","refreshPage","margin","Redirect","userCartRedirect","userWishRedirect","width","maxHeight","src","alt","productName","productDesc","substring","productPrice","productCat","categoryName","moment","createdAt","fromNow","productQuantity","Badge","pill","discount","totPrice","checkDiscount","productDisc","totalDiscPrice","addWish","addToWishListButton","addCart","addToCartButton","i","splice","removeCartItem","event","updateCartItem","removeWishlistItem","SearchComp","aCategory","allCategories","searchVal","resultData","didSearch","res","searchValue","retrieveData","queryParams","searchQuery","queryString","itemList","informUser","length","inline","onSubmit","backgroundColor","padding","FormControl","height","searchForm","displaySearched","fadeImages","poster11","poster10","poster8","poster9","poster12","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","Home","productsArrival","accessProductsArrival","soldProducts","accessSoldProducts","accessError","data","errors","Search","isActive","history","path","pathname","color","textDecoration","withRouter","Navbar","Nav","Link","as","signOut","UserRoute","Component","component","rest","render","state","listUserData","Authorization","updateUserData","userUpdate","UserDashboard","setHistory","init","userId","getUserHistory","sm","Card","Header","ListGroup","Item","h","products","userHistory","AdminRoute","AdminDashboard","StoreManagerDashboard","StoreManagerRoute","MangerSignUp","allManagers","setManagers","getAllManagers","removeManager","managerID","managerId","deleteManager","marginLeft","disabled","marginTop","marginRight","manager","CategoryManagement","setName","setSuccess","setError","setCategories","getAllCategories","productCategory","addCategory","xs","successMessage","errorMessage","required","category","LikesDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","variable","commentId","Axios","post","likes","like","alert","dislikes","Fragment","LikeFilled","LikeOutlined","paddingLeft","cursor","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","variables","writer","postId","responseTo","comment","axios","refreshFunction","result","actions","author","avatar","borderRadius","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","fontSize","Comments","Comment","setComment","marginBottom","Rating","setRating","Ratings","RatingAction","setRatingAction","onStarClick","nextValue","prevValue","noOfStars","Product","giveProduct","setCommentLists","productVariable","match","params","productid","loadUniqueProduct","productID","comments","newComment","concat","AddProduct","categories","shipping","productImage","productAdded","formData","redirectToProfile","files","set","FormData","bsCustomFileInput","submitProduct","addProduct","formD","rows","custom","cat","File","accept","label","ProductManagement","allProducts","propProducts","getTheProducts","removeProduct","deleteProduct","UpdateProduct","loadProduct","getAProduct","newProduct","updateProduct","setTimeout","step","userRedirect","Checkout","clientToken","instance","address","setData","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","delAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","onInstance","Cart","items","setItems","data-spy","data-target","data-offset","displayItems","Wishlist","UserProfile","handleChanges","updateUserProfile","StoreManagerUserProfile","Orders","orders","setOrders","load","ordersList","o","oIndex","borderBottom","Check","checkConditions","isChecked","setCheck","existingCatId","indexOf","checkedID","ProductShop","allCat","setAllCat","conditions","myConditions","setMyConditions","more","setMore","filteredResults","setFilteredResults","setSize","loadResults","newFilters","loadMoreProducts","morePro","conditionBy","newConditions","UpdateAdmin","Routes","exact","userDashboard","StoreManagerSignUp","ReactDOM","StrictMode","document","getElementById"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oMCgB5BC,G,OAbA,SAAC,GAAkE,IAAD,IAAhEC,aAAgE,MAA1D,QAA0D,MAAlDC,mBAAkD,MAAtC,cAAsC,EAAxBC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SAE/D,OACI,6BACA,yBAAKD,UAAU,iBAAiBE,MAAO,CAACC,WAAW,GAAIC,cAAc,IACjE,4BAAKN,GACL,uBAAGE,UAAU,QAAQD,IAErB,yBAAKC,UAAWA,GAAYC,M,gDCX3BI,EAAMC,4BCENC,EAAS,SAACC,GACnB,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,WAAkB,CAC1BK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OA4CXG,EAAc,WACvB,MAAqB,oBAAVC,WAGPC,aAAaC,QAAQ,QACdZ,KAAKa,MAAMF,aAAaC,QAAQ,UCuDhCE,EA5GA,WAAO,IAAD,EACWC,mBAAS,CACjCC,MAAO,GACPC,SAAS,GACTX,MAAM,GACNY,SAAQ,EACRC,eAAe,IANF,mBACVC,EADU,KACFC,EADE,KASVL,EAAkDI,EAAlDJ,MAAOC,EAA2CG,EAA3CH,SAAUX,EAAiCc,EAAjCd,MAAOY,EAA0BE,EAA1BF,QAASC,EAAiBC,EAAjBD,cACjCzB,EAAQe,IAARf,KAGD4B,EAAe,SAAAC,GAAG,OAAI,SAAAC,GACxBH,EAAU,eAAID,EAAL,aAAYd,OAAO,GAAOiB,EAAMC,EAAEC,OAAOC,WAGhDC,EAAa,SAAAH,GACfA,EAAEI,iBACFP,EAAU,eAAID,EAAL,CAAad,OAAO,EAAOY,SAAS,KDX/B,SAAAxB,GAClB,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,WAAkB,CAC1BK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MCAhBuB,CAAO,CAACb,QAAMC,aACTf,MAAK,SAAA4B,GACEA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,MAAOwB,EAAQxB,MAAOY,SAAS,ODgBhD,SAACY,EAASC,GACR,qBAAXrB,SACPC,aAAaqB,QAAQ,MAAOhC,KAAKC,UAAU6B,IAC3CC,KChBYE,CAASH,GAAS,WACdT,EAAU,eACHD,EADE,CAELD,eAAe,QASnCT,OAAOwB,SAASC,QAAO,QA0D3B,OACI,kBAAC,EAAD,CAAQnD,MAAM,UAAUC,YAAY,sBAC5BC,UAAU,kCAhClB,kBAACkD,EAAA,EAAD,CAAOC,QAAQ,SAASjD,MAAO,CAACkD,QAAShC,EAAQ,GAAK,SACjDA,GAKLY,GACI,kBAACkB,EAAA,EAAD,CAAOC,QAAQ,QACV,4CAMLlB,EACIzB,GAA0B,UAAlBA,EAAK6C,SACN,kBAAC,IAAD,CAAUC,GAAI,0BAEhB9C,GAA0B,YAAlBA,EAAK6C,SACX,kBAAC,IAAD,CAAUC,GAAI,8BAGd,kBAAC,IAAD,CAAUA,GAAI,wBAGzB/B,IACO,kBAAC,IAAD,CAAU+B,GAAI,WADzB,EAjDA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,SAAW4B,KAAK,QAAQC,YAAY,cAAczB,MAAOV,KAGlG,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,YAAc4B,KAAK,WAAWC,YAAY,WAAWzB,MAAOT,KAGrG,kBAACmC,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,gBCuCT2B,EAhGA,WAAO,IAAD,EACWvC,mBAAS,CACjCwC,UAAW,GACXC,SAAS,GACTxC,MAAO,GACPC,SAAS,GACTX,MAAM,GACNmD,SAAQ,IAPK,mBACVrC,EADU,KACFC,EADE,KAUVkC,EAAwDnC,EAAxDmC,UAAWC,EAA6CpC,EAA7CoC,SAAUxC,EAAmCI,EAAnCJ,MAAOC,EAA4BG,EAA5BH,SAAUwC,EAAkBrC,EAAlBqC,QAASnD,EAASc,EAATd,MAGhDgB,EAAe,SAAAC,GAAG,OAAI,SAAAC,GACvBH,EAAU,eAAID,EAAL,aAAYd,OAAO,GAAOiB,EAAMC,EAAEC,OAAOC,WAGjDC,EAAa,SAACH,GAChBA,EAAEI,iBACFP,EAAU,eAAID,EAAL,CAAYd,OAAO,KAE5Bb,EAAO,CAAC8D,YAAUC,WAASxC,QAAMC,aAC5Bf,MAAK,SAAA4B,GACEA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,MAAOwB,EAAQxB,MAAOmD,SAAS,KAGpDpC,EAAU,eACHD,EADE,CAELmC,UAAW,GACXC,SAAU,GACVxC,MAAO,GACPC,SAAU,GACVX,MAAO,GACPmD,SAAS,SAoD7B,OACI,kBAAC,EAAD,CAAQzE,MAAM,UAAUC,YAAY,sBACpCC,UAAU,kCAbN,kBAACkD,EAAA,EAAD,CAAOC,QAAQ,SAASjD,MAAO,CAACkD,QAAShC,EAAQ,GAAK,SACjDA,GAKT,kBAAC8B,EAAA,EAAD,CAAOC,QAAQ,OAAOjD,MAAO,CAACkD,QAASmB,EAAU,GAAK,SAAtD,wCACyC,kBAAC,IAAD,CAAMjB,GAAG,WAAT,WAzCzC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,aAAc4B,KAAK,OAAOC,YAAY,mBAAmBzB,MAAO6B,KAGzG,kBAACX,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,YAAc4B,KAAK,OAAOC,YAAY,kBAAkBzB,MAAO8B,KAGxG,kBAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,SAAW4B,KAAK,QAAQC,YAAY,cAAczB,MAAOV,KAGlG,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,YAAc4B,KAAK,WAAWC,YAAY,WAAWzB,MAAOT,KAGrG,kBAACmC,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,gB,kBCrEH+B,EAAc,SAACC,GACxB,OAAOhE,MAAM,GAAD,OAAIJ,EAAJ,4BAA2BoE,EAA3B,uBAAwD,CAChE/D,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,OA+EpBC,EAAoB,SAACC,EAAKC,GAAsB,IAAhBC,EAAe,uDAAP,GAE3CC,EAAW,CACdH,OAAKC,QAAMC,WAGd,OAAOrE,MAAM,GAAD,OAAIJ,EAAJ,oBAA2B,CACnCK,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAGpBC,KAAMC,KAAKC,UAAUgE,KAGpB/D,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OCtFX4D,EAAgB,WACzB,OAAOvE,MAAM,GAAD,OAAIJ,EAAJ,iBAAuB,CAC/BK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,O,iCCE1B,IAAMO,EAAY,SAAApC,GACC,qBAAXrB,SACPC,aAAayD,WAAW,QAN5B1D,OAAOwB,SAASC,QAAO,GAQnBJ,M,yBC8BOsC,MAlEf,SAAuBC,GAAO,MAGOvD,mBAAS,IAHhB,mBAGnBwD,EAHmB,KAGPC,EAHO,KAiBpBC,EAAc,WAVT9E,MAAM,GAAD,OAAIJ,EAAJ,kBAAwB,CAChCK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,MAKf1D,MAAK,SAAA4B,GACXA,EAAQxB,MACPC,QAAQC,IAAI,SAEZgE,EAAW1C,OAWxB,OANA4C,qBAAU,WACND,MACF,IAOU,6BAEKF,EAAWI,KAAI,SAACC,EAASC,GAEtB,GAAGD,EAAQE,MAAQR,EAAMS,IAEjB,OACI,yBAAKC,IAAKH,GACN,kBAAC,IAAD,CACII,KAAK,QACLC,UAAW,EACXC,KAAK,KACLzD,MAAOkD,EAAQQ,IACflG,UAAU,eCsHvCmG,EAxIK,SAAC,GAUf,IAiDmBC,EA1DAC,EASpB,EAToBA,QASpB,IARoBC,sBAQpB,aAPoBC,oBAOpB,aANoBC,qBAMpB,aALoBC,qBAKpB,aAJoBC,wBAIpB,aAHoBC,yBAGpB,aAFoBC,cAEpB,MAF4B,SAAAC,GAAC,OAAEA,GAE/B,MADoBC,WACpB,WADwBC,EACxB,IAE+BlF,oBAAS,GAFxC,mBAEOmF,EAFP,KAEiBC,EAFjB,OAGuBpF,mBAASwE,EAAQa,OAHxC,mBAGMA,EAHN,KAGaC,EAHb,OAIiCtF,oBAAS,GAJ1C,mBAIOuF,EAJP,KAIkBC,EAJlB,OAK6BxF,oBAAS,GALtC,gCAMyBA,oBAAS,IANlC,gCAOoBN,KAAdf,EAPN,EAOMA,KAkBD8G,GAzBL,EAOWC,MAkBK,YFrEE,SAACC,EAAK3E,GAEzB,IAAI4E,EAAM,GACS,qBAATjG,SACHC,aAAaC,QAAQ,UACpB+F,EAAK3G,KAAKa,MAAMF,aAAaC,QAAQ,UAEzC+F,EAAKC,KAAL,eACOF,EADP,CAEIN,MAAO,KAGXO,EAAOE,MAAMC,KAAK,IAAIC,IAAIJ,EAAKhC,KAAI,SAACqC,GAAD,OAAMA,EAAElC,SAAQH,KAAI,SAAAsC,GACnD,OAAON,EAAKO,MAAK,SAAAF,GAAC,OAAGA,EAAElC,MAAMmC,QAGjCtG,aAAaqB,QAAQ,OAAOhC,KAAKC,UAAU0G,IAC3C5E,KEqDAoF,CAAQ5B,GAAS,WACTY,GAAY,QAIlBiB,EAAe,YC3EE,SAACV,EAAK3E,GAE7B,IAAIsF,EAAU,GACK,qBAAT3G,SACHC,aAAaC,QAAQ,cACpByG,EAASrH,KAAKa,MAAMF,aAAaC,QAAQ,cAE7CyG,EAAST,KAAT,eACOF,EADP,CAEIN,MAAO,KAGXiB,EAAWR,MAAMC,KAAK,IAAIC,IAAIM,EAAS1C,KAAI,SAACqC,GAAD,OAAMA,EAAElC,SAAQH,KAAI,SAAAsC,GAC3D,OAAOI,EAASH,MAAK,SAAAF,GAAC,OAAGA,EAAElC,MAAMmC,QAGrCtG,aAAaqB,QAAQ,WAAWhC,KAAKC,UAAUoH,IAC/CtF,KD2DAuF,CAAY/B,GAAS,WACjBgB,GAAa,OAwBrB,SAASgB,IACL7G,OAAOwB,SAASC,QAAO,GAI3B,OAAM,yBAAKjD,UAAU,aAAaE,MAAO,CAACoI,OAAO,KAE7C,yBAAKtI,UAAU,2BA3BM,SAAAgH,GACrB,GAAGA,EACC,OAAO,kBAACuB,EAAA,EAAD,CAAUjF,GAAG,UA2BnBkF,CAAiBxB,GAvBD,SAAAI,GACrB,GAAGA,EACC,OAAO,kBAACmB,EAAA,EAAD,CAAUjF,GAAG,MAsBnBmF,CAAiBrB,GAClB,yBAAKpH,UAAU,6BAA6BE,MAAO,CAAEwI,MAAO,UAC5D,yBAAK1I,UAAU,eAAeE,MAAO,CAACyI,UAAU,OAASC,IAAG,UAAKvI,EAAL,0BAA0BgG,EAAQT,KAAOiD,IAAI,iBACrG,yBAAK7I,UAAU,aACX,wBAAIA,UAAU,cAAcqG,EAAQyC,aACpC,uBAAG9I,UAAU,aAAaqG,EAAQ0C,YAAYC,UAAU,EAAE,MAC1D,uBAAGhJ,UAAU,aAAb,MAA6BqG,EAAQ4C,cACrC,uBAAGjJ,UAAU,aAAb,aAAoCqG,EAAQ6C,YAAc7C,EAAQ6C,WAAWC,cAC7E,uBAAGnJ,UAAU,aAAb,kBAAyCoJ,IAAO/C,EAAQgD,WAAWC,UAAnE,KACA,kBAAC,EAAD,CAAezD,IAAKQ,EAAQT,MAC5B,yBAAK5F,UAAU,4CACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OAAwBqG,EAAQkD,gBA3GpD,EACP,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACtG,QAAQ,WAArB,YAAiD,kBAACqG,EAAA,EAAD,CAAOC,MAAI,EAACtG,QAAQ,WAApB,iBAM3C,SAACuG,EAAUC,GAC9B,GAAGD,EAAU,EACT,OACI,4BACI,kBAACF,EAAA,EAAD,CAAOC,MAAI,EAACzJ,UAAU,SAAUmD,QAAQ,UAAxC,sBAAqEwG,IAiGxDC,CAAcvD,EAAQwD,YAAaxD,EAAQyD,iBAE/C,6BAAK,6BACL,kBAAC,IAAD,CAAMxG,GAAE,mBAAc+C,EAAQT,MAEtBU,GAAqB,kBAACpC,EAAA,EAAD,CAAQlE,UAAU,oBAAoBmD,QAAQ,gBAA9C,iBA5EvB,SAAC4G,GACvB,GAAGvJ,GAA0B,SAAlBA,EAAK6C,SACZ,OACI0G,GAAW,kBAAC7F,EAAA,EAAD,CAAQlE,UAAU,oBAAoBmD,QAAQ,kBAAkBgB,QAAS+D,GAAzE,oBA6EF8B,CAAoBtD,GAxEnB,SAACuD,GACnB,GAAGzJ,GAA0B,SAAlBA,EAAK6C,SACZ,OACI4G,GAAW,kBAAC/F,EAAA,EAAD,CAAQlE,UAAU,eAAemD,QAAQ,UAAUgB,QAASmD,GAA5D,eAsEF4C,CAAgB3D,GAGbE,GAAiB,kBAACvC,EAAA,EAAD,CAAQlE,UAAU,eAAemD,QAAQ,SACjCgB,QAAS,YFhEhC,SAACiC,GAC3B,IAAIqB,EAAK,GACW,oBAATjG,SACHC,aAAaC,QAAQ,UACrB+F,EAAM3G,KAAKa,MAAMF,aAAaC,QAAQ,UAE1C+F,EAAKhC,KAAI,SAACY,EAAS8D,GACX9D,EAAQT,MAAMQ,GACdqB,EAAK2C,OAAOD,EAAE,MAGtB1I,aAAaqB,QAAQ,OAAOhC,KAAKC,UAAU0G,KEqDgB4C,CAAehE,EAAQT,KAAKgB,GAAQE,GAAKuB,MAD/D,UAMjB7B,GAAiB,6BACb,yBAAKxG,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,oBAEJ,2BAAOgE,KAAK,SAAShE,UAAU,mBAAmBwC,MAAO0E,EAAOnD,UAvD3EqC,EAuDkGC,EAAQT,IAvD7F,SAAA0E,GAC9B1D,GAAQE,GACRK,EAASmD,EAAM/H,OAAOC,MAAO,EAAI,EAAG8H,EAAM/H,OAAOC,OAC9C8H,EAAM/H,OAAOC,OAAO,GFtCD,SAAC4D,EAAWc,GACxC,IAAIO,EAAK,GACa,oBAATjG,SACHC,aAAaC,QAAQ,UACrB+F,EAAM3G,KAAKa,MAAMF,aAAaC,QAAQ,UAE1C+F,EAAKhC,KAAI,SAACY,EAAS8D,GACZ9D,EAAQT,MAAMQ,IACdqB,EAAK0C,GAAGjD,MAAMA,MAGrBzF,aAAaqB,QAAQ,OAAOhC,KAAKC,UAAU0G,KE4BvC8C,CAAenE,EAAUkE,EAAM/H,OAAOC,aAyDtBmE,GAAqB,kBAACzC,EAAA,EAAD,CAAQlE,UAAU,oBAAoBmD,QAAQ,SAC1CgB,QAAS,YC5G5B,SAACiC,GAC/B,IAAI+B,EAAS,GACO,oBAAT3G,SACHC,aAAaC,QAAQ,cACrByG,EAAUrH,KAAKa,MAAMF,aAAaC,QAAQ,cAE9CyG,EAAS1C,KAAI,SAACY,EAAS8D,GACf9D,EAAQT,MAAMQ,GACd+B,EAASiC,OAAOD,EAAE,MAG1B1I,aAAaqB,QAAQ,WAAWhC,KAAKC,UAAUoH,KDiGYqC,CAAmBnE,EAAQT,KAAKgB,GAAQE,GAAKuB,MAD/D,gBE5BlCoC,EArHI,WAAK,MAEQ5I,mBAAS,CACjC6I,UAAU,GACVC,cAAgB,GAChBC,UAAU,GACVC,WAAW,GACXC,WAAU,IAPM,mBAEb5I,EAFa,KAELC,EAFK,KAUbuI,EAA0DxI,EAA1DwI,UAAwBE,GAAkC1I,EAAhDyI,cAAgDzI,EAAlC0I,WAAUC,EAAwB3I,EAAxB2I,WAAWC,EAAa5I,EAAb4I,UAcpDtF,qBAAU,WAVNR,IAAgBhE,MAAK,SAAA+J,GACdA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhBe,EAAU,eAAI4I,EAAL,CAASJ,cAAeI,UAQ3C,IAIF,IAOMC,EAAc,SAAC1I,GAEjBA,EAAEI,iBACFuI,KAIEA,EAAe,WACbH,GNwBY,SAAAI,GACpB,IAAMC,EAAcC,IAAYrK,UAAUmK,GAE1C,OADA7J,QAAQC,IAAI,cAAc6J,GACnB1K,MAAM,GAAD,OAAIJ,EAAJ,mCAAkC8K,GAAc,CACxDzK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAGnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,MMjCrB2G,CAAS,CAACT,UAAWA,QAAa7D,EAAW2D,UAAWA,IACnD1J,MAAK,SAAAC,GACCA,EAASG,MACRC,QAAQC,IAAIL,EAASG,OAErBe,EAAU,eAAID,EAAL,CAAa2I,WAAW5J,EAAU6J,WAAW,SAuBpEQ,EAAa,SAACR,EAAWD,GAC3B,OAAGC,GAAaD,EAAWU,OAAS,GAAKV,EAAWU,OAAS,EACnD,SAAN,OAAgBV,EAAWU,OAA3B,YAEDT,GAAaD,EAAWU,OAAS,EAC1B,SAAN,OAAgBV,EAAWU,OAA3B,aAEDT,GAAaD,EAAWU,OAAS,EAC1B,yBADV,GAsBJ,OAEE,6BACI,yBAAKvL,UAAU,iCACX,yBAAKA,UAAU,SApBV,kBACf,kBAAC0D,EAAA,EAAD,CAAM8H,QAAM,EAACC,SAAUT,GACnB,0BAAMhL,UAAU,+BAA+BE,MAAO,CAAEwL,gBAAgB,UAAWC,QAAQ,KACvF,yBAAK3L,UAAU,8BACX,yBAAKA,UAAU,uBACV,kBAAC4L,EAAA,EAAD,CAAa5H,KAAK,OAAOC,YAAY,wCAAwCjE,UAAU,OAAOE,MAAO,CAAC2L,OAAO,GAAInD,MAAM,KAAM3E,UA9DxH1B,EA8D+I,YA9DvI,SAAAC,GAAK,IAAD,EAC9BH,EAAU,eAAID,GAAL,mBAAaG,EAAKC,EAAEC,OAAOC,OAA3B,2BAA6C,GAA7C,SA8DI,kBAAC0B,EAAA,EAAD,CAAQlE,UAAU,8BAA8BgE,KAAK,UAArD,cA/DI,IAAC3B,EA6EYyJ,KAE5B,yBAAK9L,UAAU,wBApDG,WAAqB,IAApB6K,EAAmB,uDAAN,GAElC,OACI,6BACI,wBAAI7K,UAAU,aACTsL,EAAWR,EAAUD,IAE1B,kBAACrH,EAAA,EAAD,KACKqH,EAAWpF,KAAI,SAACY,EAASV,GAAV,OACZ,kBAAC,EAAD,CAAaG,IAAKH,EAAOU,QAASA,SA4C3C0F,CAAgBlB,M,mGC/GzBmB,G,OAAa,CACfC,IACAC,IACAC,IACAC,IACAC,MAIEC,EAAoB,CACtBC,SAAU,IACVC,mBAAoB,IACpBC,UAAU,EACVC,YAAW,EACXC,MAAO,GACPC,QAAQ,GAeGC,EAZG,WACd,OACI,yBAAK7M,UAAU,mBACX,kBAAC,OAASsM,EAEFN,EAAWvG,KAAI,SAACqH,EAAMnH,GAAP,OAAiB,yBAAKG,IAAKH,EAAOzF,MAAO,CAACwI,MAAO,QAASE,IAAKkE,EAAOjE,IAAI,iBC+C9FkE,GAxEF,WAAM,MAGkClL,mBAAS,IAH3C,mBAGRmL,EAHQ,KAGSC,EAHT,OAI4BpL,mBAAS,IAJrC,mBAIRqL,EAJQ,KAIMC,EAJN,OAKctL,oBAAS,GALvB,mBAKDuL,GALC,WAyCf,OANA5H,qBAAU,WAbNhB,EAAY,gBAAgBxD,MAAK,SAAAqM,GAC1BA,EAAKC,OACJF,EAAYC,EAAKjM,OAGjB+L,EAAmBE,MAjB3B7I,EAAY,aAAaxD,MAAK,SAAAqM,GACvBA,EAAKjM,MACJgM,EAAYC,EAAKjM,OAGjB6L,EAAsBI,QAuBhC,IAKF,6BACQ,yBAAKrN,UAAU,uBACd,kBAAC,EAAD,OAEG,kBAACuN,EAAD,MAEJ,wBAAIvN,UAAU,aAAd,gBAEI,kBAACwD,EAAA,EAAD,CAAKxD,UAAU,aACVkN,EAAazH,KAAI,SAACY,EAAQV,GAAT,OACd,kBAAC,EAAD,CAAMG,IAAKH,EAAOU,QAASA,QAK3C,6BAAK,6BAAK,6BAEN,wBAAIrG,UAAU,cAAd,gBACA,kBAACwD,EAAA,EAAD,CAAKxD,UAAU,aACVgN,EAAgBvH,KAAI,SAACY,EAAQV,GAAT,OACjB,kBAAC,EAAD,CAAOG,IAAKH,EAAOU,QAASA,U,mBC7D1CmH,GAAW,SAACC,EAAQC,GACtB,OAAGD,EAAQzK,SAAS2K,WAAaD,EACtB,CAACE,MAAM,UAAWC,eAAgB,QAElC,CAACD,MAAM,UAAYC,eAAgB,SAoFnCC,oBAhFf,YAA2B,IAAXL,EAAU,EAAVA,QACZ,OACI,6BAEA,kBAACM,GAAA,EAAD,CAAQ/N,UAAU,+BAAgCE,MAAO,CAAC2L,OAAO,KAE7D,kBAACmC,GAAA,EAAD,CAAKhO,UAAU,iBACP,kBAACgO,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAOsN,GAASC,EAAQ,KAAMnK,GAAG,KAD/C,SAIA,kBAAC0K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAOsN,GAASC,EAAQ,gBAAiBnK,GAAG,gBAD1D,UAKC/B,KAAiD,SAAhCA,IAAcf,KAAK6C,UACjC,kBAAC2K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAOsN,GAASC,EAAQ,uBAAwBnK,GAAG,uBADjE,aAMH/B,KAAiD,YAAhCA,IAAcf,KAAK6C,UACjC,kBAAC2K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAK/N,MAAOsN,GAASC,EAAQ,6BAA8BnK,GAAG,6BADtE,aAMH/B,KAAiD,UAAhCA,IAAcf,KAAK6C,UACjC,kBAAC2K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAOsN,GAASC,EAAQ,yBAA0BnK,GAAG,yBADnE,aAKH/B,KAAiD,SAAhCA,IAAcf,KAAK6C,UACrC,kBAAC2K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAK/N,MAAOsN,GAASC,EAAQ,SAAUnK,GAAG,SADlD,QAC+D,6BAAK,+BPhCjE,qBAAT9B,QACFC,aAAaC,QAAQ,QACfZ,KAAKa,MAAMF,aAAaC,QAAQ,SAAS6J,OAGpD,KO+BchK,KAAiD,SAAhCA,IAAcf,KAAK6C,UACjC,kBAAC2K,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAOsN,GAASC,EAAQ,aAAcnK,GAAG,aADvD,YAC4E,6BAAK,+BJtClF,qBAAT9B,QACFC,aAAaC,QAAQ,YACdZ,KAAKa,MAAMF,aAAaC,QAAQ,aAAa6J,OAGrD,KIsCK,kBAACyC,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM/N,MAAO,CAAC0N,MAAM,UAAYC,eAAgB,QAAU7N,UAAU,4BAA4BsD,GAAG,KAD3G,IACgH,2BAAG,4CAKrH/B,KACE,kBAAC,WAAD,KACI,kBAACyM,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAO3K,GAAG,UAAUpD,MAAOsN,GAASC,EAAQ,WAAYzN,UAAU,eAD1E,WAIA,kBAACgO,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM3K,GAAG,UAAUpD,MAAOsN,GAASC,EAAQ,YADnD,YAOPlM,KACG,kBAACyM,GAAA,EAAIC,KAAL,CACIC,GAAID,IAAM3K,GAAG,UAAUpD,MAAOsN,GAASC,EAAQ,WAAYtJ,QAAS,kBZnDjE,SAACtB,GACpB,GAAsB,qBAAXrB,OAGP,OAFAC,aAAayD,WAAW,OACxBrC,IACOpC,MAAM,GAAD,OAAIJ,EAAJ,YAAmB,CAC3BK,OAAQ,QAEPM,MAAK,SAAAC,GACFI,QAAQC,IAAI,UAAUL,MAEzBE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MYyCsD+M,EAAQ,WP1C5E,qBAAX3M,QACPC,aAAayD,WAAW,QGdN,qBAAX1D,QACPC,aAAayD,WAAW,iBIqDhB,iB,SCtEDkJ,GAVG,SAAC,GAAD,IAAaC,EAAb,EAAEC,UAAwBC,EAA1B,qCACd,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAApJ,GAAK,OAAI7D,IAC9B,kBAAC8M,EAAcjJ,GAEf,kBAAC,IAAD,CAAU9B,GAAI,CAACqK,SAAU,UAAWc,MAAO,CAAC7G,KAAOxC,EAAMpC,kB,mBCRpD0L,GAAe,SAAC3G,EAAIR,GAC7B,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,iBAAgB0H,GAAK,CAC7BrH,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,MAG5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,OAIpBkK,GAAiB,SAAC7G,EAAIR,EAAO/G,GACtC,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,iBAAgB0H,GAAK,CAC7BrH,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,IAE7B1G,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,OAIpBmK,GAAa,SAACrO,EAAMqC,GAC7B,GAAsB,qBAAXrB,QACHC,aAAaC,QAAQ,OAAO,CAC5B,IAAIqB,EAAWjC,KAAKa,MAAMF,aAAaC,QAAQ,QAC/CqB,EAASvC,KAAOA,EAChBiB,aAAaqB,QAAQ,MAAOhC,KAAKC,UAAUgC,IAC3CF,MCyEGiM,GAzGO,WAAO,IAAD,EAEGjN,mBAAS,IAFZ,mBAEjB4L,EAFiB,KAETsB,EAFS,OAIgCxN,IAAjDf,KAAOoF,EAJU,EAIVA,IAAIvB,EAJM,EAINA,UAAUC,EAJJ,EAIIA,SAASxC,EAJb,EAIaA,MAAMuB,EAJnB,EAImBA,SAErCkE,EAAMhG,IAAcgG,MAEpByH,EAAK,SAACC,EAAO1H,ID6BO,SAACQ,EAAIR,GAC/B,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,2BAA0B0H,GAAK,CACvCrH,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,MAG5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,OCxCzBwK,CAAeD,EAAO1H,GACjBvG,MAAK,SAAAqM,GACCA,EAAKjM,MACJC,QAAQC,IAAI+L,EAAKjM,OAEjB2N,EAAW1B,OAK3B7H,qBAAU,WACNwJ,EAAKpJ,EAAI2B,KACX,IAuEF,OACI,kBAAC,EAAD,CAAQzH,MAAM,sBAAsBC,YAAW,gBAAWsE,GAAarE,UAAU,aAC7E,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0L,GAAI,GAvEjB,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,cACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,SAA9B,YAEJ,kBAACgM,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAE,uBAAkBsC,IAA/C,qBAIZ,8BA2DI,KACA,kBAACnC,EAAA,EAAD,CAAK0L,GAAI,GAAT,IArDR,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,oBACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KAAiBlL,GACjB,kBAACiL,GAAA,EAAUC,KAAX,KAAiBjL,GACjB,kBAACgL,GAAA,EAAUC,KAAX,KAAiBzN,GACjB,kBAACwN,GAAA,EAAUC,KAAX,KAAiBlM,KAGzB,8BA2CI,IAtCI,SAACoK,GACjB,OACI,6BACI,kBAAC2B,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,oBACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACK9B,EAAQhI,KAAI,SAAC+J,EAAGrF,GACb,OACI,6BACI,6BACCqF,EAAEC,SAAShK,KAAI,SAACqC,EAAGqC,GAChB,OACI,yBAAKrE,IAAKqE,GACN,6CAAmBrC,EAAEgB,aACrB,+CAAqBhB,EAAEmB,cACvB,8CACoB,IACfG,IAAOtB,EAAEuB,WAAWC,uBAoBvBoG,CAAYjC,QCvFnDkC,GAbI,SAAC,GAAD,IAAatB,EAAb,EAAEC,UAAwBC,EAA1B,qCACf,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAApJ,GAAK,OACT7D,KAAiD,UAAhCA,IAAcf,KAAK6C,SACxC,kBAACgL,EAAcjJ,GAEf,kBAAC,IAAD,CAAU9B,GAAI,CAACqK,SAAU,UAAWc,MAAO,CAAC7G,KAAOxC,EAAMpC,kBCoDlD4M,GA1DQ,WAAO,IAAD,EAE+BrO,IAAjDf,KAAOoF,EAFW,EAEXA,IAAIvB,EAFO,EAEPA,UAAUC,EAFH,EAEGA,SAASxC,EAFZ,EAEYA,MAAMuB,EAFlB,EAEkBA,SA2C3C,OACI,kBAAC,EAAD,CAAQvD,MAAM,YAAYC,YAAW,gBAAWsE,GAAarE,UAAU,aACnE,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0L,GAAI,GA3CjB,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,eACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,iBAA9B,oBAEJ,kBAACgM,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,wBAA9B,6BAEJ,kBAACgM,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAE,wBAAmBsC,IAAhD,qBAKZ,8BA2BI,KACA,kBAACnC,EAAA,EAAD,CAAK0L,GAAI,GAAT,IArBR,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,oBACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KAAiBlL,GACjB,kBAACiL,GAAA,EAAUC,KAAX,KAAiBjL,GACjB,kBAACgL,GAAA,EAAUC,KAAX,KAAiBzN,GACjB,kBAACwN,GAAA,EAAUC,KAAX,KAAiBlM,KAGzB,mCC2BDwM,GAlEe,WAAO,IAAD,EAEwBtO,IAAjDf,KAAOoF,EAFkB,EAElBA,IAAIvB,EAFc,EAEdA,UAAUC,EAFI,EAEJA,SAASxC,EAFL,EAEKA,MAAMuB,EAFX,EAEWA,SAmD3C,OACI,kBAAC,EAAD,CAAQvD,MAAM,sBAAsBC,YAAW,gBAAWsE,GAAarE,UAAU,aAC7E,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0L,GAAI,GAnDjB,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,iBACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,iBAA9B,kBAGR,kBAACgM,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,gCAA9B,mBAGR,kBAACgM,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KACI,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAE,mCAA8BsC,IAA3D,kBAGR,kBAAC0J,GAAA,EAAD,KACG,kBAACA,GAAA,EAAUC,KAAX,KACG,kBAAC,IAAD,CAAMvP,UAAU,WAAWsD,GAAG,wBAA9B,kBAIV,8BA2BI,KACA,kBAACG,EAAA,EAAD,CAAK0L,GAAI,GAAT,IArBR,6BACI,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKC,OAAN,CAAarP,UAAU,eAAvB,oBACA,kBAACsP,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,KAAiBlL,GACjB,kBAACiL,GAAA,EAAUC,KAAX,KAAiBjL,GACjB,kBAACgL,GAAA,EAAUC,KAAX,KAAiBzN,GACjB,kBAACwN,GAAA,EAAUC,KAAX,KAAiBlM,KAGzB,mCCnCDyM,GAbW,SAAC,GAAD,IAAazB,EAAb,EAAEC,UAAwBC,EAA1B,qCACtB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAApJ,GAAK,OACT7D,KAAiD,YAAhCA,IAAcf,KAAK6C,SAChC,kBAACgL,EAAcjJ,GAEf,kBAAC,IAAD,CAAU9B,GAAI,CAACqK,SAAU,UAAWc,MAAO,CAAC7G,KAAOxC,EAAMpC,kBCkJ1D+M,GAlJM,WAAO,IAAD,EACKlO,mBAAS,CACjCwC,UAAW,GACXC,SAAS,GACTxC,MAAO,GACPC,SAAS,GACTsB,SAAS,UACTjC,MAAM,GACNmD,SAAQ,IARW,mBAChBrC,EADgB,KACRC,EADQ,OAWDZ,IAAff,EAXgB,EAWhBA,KAAM+G,EAXU,EAWVA,MAXU,EAYY1F,mBAAS,IAZrB,mBAYhBmO,EAZgB,KAYHC,EAZG,KAahB5L,EAAiEnC,EAAjEmC,UAAWC,EAAsDpC,EAAtDoC,SAAUxC,EAA4CI,EAA5CJ,MAAOC,EAAqCG,EAArCH,SAASsB,EAA4BnB,EAA5BmB,SAAUkB,EAAkBrC,EAAlBqC,QAASnD,EAASc,EAATd,MAEzD8O,EAAiB,WCPhBzP,MAAM,GAAD,OAAIJ,EAAJ,sBAA4B,CACpCK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,MDEX1D,MAAK,SAAA+J,GACZA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhB6O,EAAYlF,OAKlBoF,EAAgB,SAAAC,ICRG,SAACC,EAAUpB,EAAQ1H,GAC5C,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,qCAAoCgQ,EAApC,YAAiDpB,GAAS,CAClEvO,OAAQ,SACRC,QAAS,CACLC,OAAQ,mBACR,eAAe,mBACf+N,cAAc,UAAD,OAAYpH,MAG5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,ODH1B4L,CAAcF,EAAU5P,EAAKoF,IAAI2B,GAAOvG,MACpC,SAAA+J,GACOA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhB8O,QAOhB1K,qBAAU,WACN0K,MACD,IAEH,IAAM9N,EAAe,SAAAC,GAAG,OAAI,SAAAC,GACxBH,EAAU,eAAID,EAAL,aAAYd,OAAO,GAAOiB,EAAMC,EAAEC,OAAOC,WAGhDC,EAAa,SAACH,GAChBA,EAAEI,iBACFP,EAAU,eAAID,EAAL,CAAYd,OAAO,KAE5Bb,EAAO,CAAC8D,YAAUC,WAASxC,QAAMC,WAASsB,aACrCrC,MAAK,SAAA4B,GACEA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,MAAOwB,EAAQxB,MAAOmD,SAAS,KAGpDpC,EAAU,eACHD,EADE,CAELmC,UAAW,GACXC,SAAU,GACVxC,MAAO,GACPC,SAAU,GACVsB,SAAU,UACVjC,MAAO,GACPmD,SAAS,KAQzB/C,OAAOwB,SAASC,QAAO,OAiE3B,OACI,kBAAC,EAAD,CAAQnD,MAAM,2BAA2BC,YAAY,GAAGC,UAAU,kCAZlE,kBAACkD,EAAA,EAAD,CAAOC,QAAQ,SAASjD,MAAO,CAACkD,QAAShC,EAAQ,GAAK,SACjDA,GAKL,kBAAC8B,EAAA,EAAD,CAAOC,QAAQ,OAAOjD,MAAO,CAACkD,QAASmB,EAAU,GAAK,SAAtD,iCAxDA,kBAAChB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvD,MAAO,CAACqQ,YAAY,MACrB,kBAAC7M,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,aAAc4B,KAAK,OAAOC,YAAY,mBAAmBzB,MAAO6B,KAEzG,kBAACX,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,YAAc4B,KAAK,OAAOC,YAAY,kBAAkBzB,MAAO8B,KAExG,kBAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,SAAW4B,KAAK,QAAQC,YAAY,cAAczB,MAAOV,KAGlG,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,YAAc4B,KAAK,WAAWC,YAAY,WAAWzB,MAAOT,KAErG,kBAAC2B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc0M,UAAQ,EAAGxM,KAAK,OAAOC,YAAY,YAAYzB,MAAM,aAEvE,kBAAC0B,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,iBAMR,kBAACgB,EAAA,EAAD,CAAKvD,MAAO,CAACuQ,UAAU,GAAGC,aAAc,MACpC,kBAACpB,GAAA,EAAD,CAAWnM,QAAQ,SACd6M,EAAYvK,KAAI,SAACkL,EAAQhL,GAAT,OACb,kBAAC2J,GAAA,EAAUC,KAAX,CAAgBzJ,IAAOH,EAAO3F,UAAU,kCACpC,gCAAS2Q,EAAQtM,UAAjB,SACA,gCAASsM,EAAQrM,UACjB,kBAAC,IAAD,KACI,0BAAMtE,UAAU,iBAAiBmE,QAAS,kBAAMgM,EAAcQ,EAAQ/K,OACtE,kBAAC4D,EAAA,EAAD,CAAOrG,QAAQ,UAAf,sBEHrByN,GArHY,WAAO,IAAD,EACG/O,mBAAS,IADZ,mBACtBsH,EADsB,KACR0H,EADQ,OAEChP,oBAAS,GAFV,mBAEtB0C,EAFsB,KAEbuM,EAFa,OAGHjP,oBAAS,GAHN,mBAGtBT,EAHsB,KAGf2P,EAHe,OAIUlP,mBAAS,IAJnB,mBAItB8I,EAJsB,KAIPqG,EAJO,OAOPzP,IAAff,EAPsB,EAOtBA,KAAM+G,EAPgB,EAOhBA,MAEP0J,EAAmB,WD8BlBxQ,MAAM,GAAD,OAAIJ,EAAJ,iBAAuB,CAC/BK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,MCnCT1D,MAAK,SAAA+J,GACdA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhB4P,EAAcjG,OAM1BvF,qBAAU,WACNyL,MACD,IAGH,IAAM7O,EAAe,SAACE,GAClByO,EAAS,IACTF,EAAQvO,EAAEC,OAAOC,QAGfC,EAAa,SAACH,GAChBA,EAAEI,iBACFqO,EAAS,IACTD,GAAW,GDvCQ,SAAC7B,EAAO1H,EAAM2J,GACrC,OAAOzQ,MAAM,GAAD,OAAIJ,EAAJ,yBAAwB4O,GAAU,CAC1CvO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,IAE7B1G,KAAMC,KAAKC,UAAUmQ,KAEpBlQ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MC4BhB+P,CAAY3Q,EAAKoF,IAAI2B,EAAM,CAAC4B,iBACvBnI,MAAK,SAAA4B,GACEA,EAAQxB,MACR2P,GAAS,IAGTA,EAAS,IACTD,GAAW,GACXD,EAAQ,KAOpBrP,OAAOwB,SAASC,QAAO,OAmD3B,OACI,kBAAC,EAAD,CAAQnD,MAAM,qBAAqBC,YAAW,gBAAWS,EAAK6D,WAAarE,UAAU,kCACjF,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IAdF,WACnB,GAAG7M,EACC,OACI,kBAACrB,EAAA,EAAD,CAAOC,QAAQ,WAAf,iCAYSkO,GAzBA,WACjB,GAAGjQ,EACC,OACI,kBAAC8B,EAAA,EAAD,CAAOC,QAAQ,UAAf,gCAuBSmO,GArDb,kBAAC/N,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvD,MAAO,CAACuQ,UAAU,GAAGF,YAAY,MAClC,kBAAC7M,EAAA,EAAD,CAAM+H,SAAUhJ,GACZ,kBAACiB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAClB,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAc4B,KAAK,OAAOC,YAAY,aAAazB,MAAO2G,EAAcoI,UAAQ,KAE5G,kBAACrN,EAAA,EAAD,CAAQf,QAAQ,kBAAkBa,KAAK,UAAvC,qBAMR,kBAACP,EAAA,EAAD,CAAKvD,MAAO,CAACuQ,UAAU,GAAGC,aAAc,MACpC,kBAACpB,GAAA,EAAD,CAAWnM,QAAQ,SACdwH,EAAclF,KAAI,SAAC+L,EAAS7L,GAAV,OACf,kBAAC2J,GAAA,EAAUC,KAAX,CAAgBzJ,IAAOH,GAClB6L,EAASrI,0B,sJCuD/BsI,OAhIf,SAAuBrM,GAAO,MAEDvD,mBAAS,GAFR,mBAEnB6P,EAFmB,KAEbC,EAFa,OAGK9P,mBAAS,GAHd,mBAGnB+P,EAHmB,KAGVC,EAHU,OAIShQ,mBAAS,MAJlB,mBAInBiQ,EAJmB,KAIRC,EAJQ,OAKelQ,mBAAS,MALxB,mBAKnBmQ,EALmB,KAKLC,EALK,KAOtBC,EAAW,CACXC,UAAU/M,EAAM+M,UAChBlD,OAAO7J,EAAM6J,QAiGjB,OA7FAzJ,qBAAU,WACN4M,KAAMC,KAAN,UAAchS,EAAd,kBAAkC6R,GAC7BlR,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACdoN,EAAS1Q,EAASoM,KAAKiF,MAAM/G,QAE7BtK,EAASoM,KAAKiF,MAAM7M,KAAI,SAAA8M,GAChBA,EAAKtD,SAAW7J,EAAM6J,QACtB8C,EAAc,aAItBS,MAAM,0BAIlBJ,KAAMC,KAAN,UAAchS,EAAd,qBAAqC6R,GAChClR,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACdsN,EAAY5Q,EAASoM,KAAKoF,SAASlH,QAEnCtK,EAASoM,KAAKoF,SAAShN,KAAI,SAAA8M,GACnBA,EAAKtD,SAAW7J,EAAM6J,QACtBgD,EAAiB,gBAIzBO,MAAM,+BAGpB,IAgEE,6BACI,kBAAC,IAAME,SAAP,KACI,0BAAM5M,IAAI,sBACN,kBAAC,KAAD,CAAShG,MAAM,QACK,UAAfgS,EAAwB,kBAACa,GAAA,EAAD,MAAgB,kBAACC,GAAA,EAAD,CAAczO,QAjE5D,WACO,OAAd2N,EACAM,KAAMC,KAAN,UAAchS,EAAd,gBAAgC6R,GAC/BlR,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACdoN,EAASD,EAAM,GACfK,EAAc,SAEQ,OAAlBC,IACAC,EAAiB,MACjBJ,EAAYD,EAAS,KAGzBY,MAAM,kCAIdJ,KAAMC,KAAN,UAAchS,EAAd,gBAAgC6R,GAC/BlR,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACdoN,EAASD,EAAM,GACfK,EAAc,OAEdS,MAAM,sCA4CN,0BAAMtS,MAAO,CAAC2S,YAAY,MAAOC,OAAO,SAAUpB,IAL1D,WAOI,0BAAM5L,IAAI,yBACN,0BAAMA,IAAI,sBACN,kBAAC,KAAD,CAAShG,MAAM,YACQ,aAAlBkS,EAA8B,kBAAC,KAAD,MAAmB,kBAAC,KAAD,CAAiB7N,QA1CzE,WACQ,OAAlB6N,EAEAI,KAAMC,KAAN,UAAchS,EAAd,mBAAmC6R,GAC9BlR,MAAK,SAAAC,GACCA,EAASoM,KAAK9I,SACbsN,EAAYD,EAAS,GACrBK,EAAiB,OAEjBO,MAAM,iCAIlBJ,KAAMC,KAAN,UAAchS,EAAd,mBAAmC6R,GAC9BlR,MAAK,SAAAC,GACCA,EAASoM,KAAK9I,SACbsN,EAAYD,EAAS,GACrBK,EAAiB,YAEE,OAAfH,IACAC,EAAc,MACdJ,EAASD,EAAM,KAGnBc,MAAM,qCAoBV,0BAAMtS,MAAO,CAAC2S,YAAY,MAAOC,OAAO,SAAUlB,IALtD,eCpHTmB,GAAYC,KAAZD,SAoFQE,OAlFf,SAAuB7N,GAAQ,IAAD,EAEL7D,IAFK,KAEnBf,KAFmB,EAEd+G,MAG4B1F,mBAAS,KALvB,mBAKnBqR,EALmB,KAKLC,EALK,OAMQtR,oBAAS,GANjB,mBAMnBuR,EANmB,KAMRC,EANQ,KAepB5H,EAAW,SAACnJ,GACdA,EAAEI,iBAEF,IAAM4Q,EAAY,CACdC,OAAQnO,EAAM5E,KACdgT,OAAQpO,EAAMoO,OACdC,WAAYrO,EAAMsO,QAAQ9N,IAC1BhD,QAASsQ,GAIbS,KAAMtB,KAAN,UAAchS,EAAd,yBAA0CiT,GACrCtS,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACd4O,EAAgB,IAChBE,GAAcD,GACdhO,EAAMwO,gBAAgB3S,EAASoM,KAAKwG,SAEpCrB,MAAM,8BAUfsB,EAAU,CACb,kBAAC,GAAD,CAAeJ,SAAO,EAACvB,UAAW/M,EAAMsO,QAAQ9N,IAAKqJ,OAAQxN,aAAaC,QAAQ,YAClF,0BAAMyC,QAnCQ,WACdkP,GAAcD,IAkCYtN,IAAI,0BAA9B,cAGJ,OACI,6BACI,kBAAC,KAAD,CACRgO,QAASA,EACTC,OAAO,OACPC,OACI,kBAAC,KAAD,CACIpL,IAAI,KACJC,IAAI,UAGZjG,QACI,2BACKwC,EAAMsO,QAAQ9Q,WAKdwQ,GACD,0BAAMlT,MAAO,CAAEkD,QAAS,QAAUqI,SAAUA,GACxC,kBAAC,GAAD,CACIvL,MAAO,CAAEwI,MAAO,OAAQuL,aAAc,OACtClQ,SA/BK,SAACzB,GAClB6Q,EAAgB7Q,EAAE4R,cAAc1R,QA+BpBA,MAAO0Q,EACPjP,YAAY,wBAEhB,6BACA,kBAAC,KAAD,CAAQ/D,MAAO,CAAEwI,MAAO,MAAOmD,OAAQ,QAAU1H,QAASsH,GAA1D,aCzBD0I,OAxDf,SAASA,EAAa/O,GAAO,IAoBCgP,EApBD,EAG2BvS,mBAAS,GAHpC,mBAGlBwS,EAHkB,KAGEC,EAHF,OAIyBzS,oBAAS,GAJlC,mBAIlB0S,EAJkB,KAICC,EAJD,KAsCzB,OA/BAhP,qBAAU,WAEN,IAAIiP,EAAgB,EACpBrP,EAAMsP,aAAajP,KAAI,SAACiO,GAEhBA,EAAQD,aAAerO,EAAMgP,iBAC7BK,OAGRH,EAAsBG,KACvB,CAACrP,EAAMsP,aAActP,EAAMgP,kBAsB1B,6BAEKC,EAAqB,GACtB,uBAAGnU,MAAO,CAAEyU,SAAU,OAAQrM,OAAQ,EAAGsF,MAAO,QAC7CzJ,QAVU,WACjBqQ,GAAsBD,KAQlB,QAEUF,EAFV,oBAMCE,IA5BiBH,EA6BChP,EAAMgP,gBA5B7BhP,EAAMsP,aAAajP,KAAI,SAACiO,EAAS/N,GAAV,OACnB,kBAAC,IAAM+M,SAAP,KACKgB,EAAQD,aAAeW,GACxB,yBAAKlU,MAAO,CAAEwI,MAAO,MAAO6H,WAAY,SACpC,kBAAC,GAAD,CAAemD,QAASA,EAASF,OAAQpO,EAAMoO,OAAQI,gBAAiBxO,EAAMwO,kBAC9E,kBAACO,EAAD,CAAcO,aAActP,EAAMsP,aAAcN,gBAAiBV,EAAQ9N,IAAK4N,OAAQpO,EAAMoO,OAAQI,gBAAiBxO,EAAMwO,0BCwDhIgB,OAzEf,SAAkBxP,GAId,IAAM5E,EAAOe,KAAiBA,IAAcf,KAAKoF,IAJ5B,EAMS/D,mBAAS,IANlB,mBAMdgT,EANc,KAMLC,EANK,KAcfrJ,EAAW,SAACnJ,GACdA,EAAEI,iBAEF,IAAM4Q,EAAY,CACd1Q,QAASiS,EACTtB,OAAQ/S,EAAKoF,IACb4N,OAAQpO,EAAMoO,QAGlBG,KAAMtB,KAAN,UAAchS,EAAd,yBAAyCiT,GACpCtS,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACduQ,EAAW,IACXzT,QAAQC,IAAIL,GACZmE,EAAMwO,gBAAgB3S,EAASoM,KAAKwG,SAEpCrB,MAAM,8BAKtB,OACI,kBAACjP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IACL,6BACI,6BACA,yCACA,6BAGChM,EAAMsP,cAAgBtP,EAAMsP,aAAajP,KAAI,SAACiO,EAAS/N,GAAV,OACxC+N,EAAQD,YACN,yBAAK3N,IAAKH,GACN,kBAAC,IAAM+M,SAAP,KACI,kBAAC,GAAD,CAAegB,QAASA,EAASF,OAAQpO,EAAMoO,OAAQI,gBAAiBxO,EAAMwO,kBAC9E,kBAAC,GAAD,CAAcc,aAActP,EAAMsP,aAAclB,OAAQpO,EAAMoO,OAAQY,gBAAiBV,EAAQ9N,IAAKgO,gBAAiBxO,EAAMwO,uBAO3I,0BAAM1T,MAAO,CAACkD,QAAS,QAASqI,SAAUA,GACtC,kBAACsH,GAAA,EAAD,CACI7S,MAAO,CAACwI,MAAO,OAASuL,aAAc,MAAMc,aAAa,IACzDhR,SAnDP,SAACzB,GAClBwS,EAAWxS,EAAE4R,cAAc1R,QAmDHA,MAAOqS,EACP5Q,YAAc,oBAEd,kBAAC,KAAD,CAAQ/D,MAAO,CAACwI,MAAO,MAAMmD,OAAQ,QAAS1H,QAASsH,GAAvD,gBC6BjBuJ,OAlGf,SAAgB5P,GAAO,MAEQvD,mBAAS,GAFjB,mBAEZmT,EAFY,KAELC,EAFK,OAGUpT,mBAAS,GAHnB,mBAGZqT,EAHY,KAGJ5P,EAHI,OAIoBzD,mBAAS,MAJ7B,mBAIZsT,EAJY,KAICC,EAJD,OAKG7T,IAAff,EALY,EAKZA,KALY,KAKN+G,MACuB1F,mBAAS,KAN1B,mBAQfyR,GARe,UAQH,CACZlN,UAAUhB,EAAMgB,YAuDpB,OAnDAZ,qBAAU,WACN4M,KAAMC,KAAN,UAAchS,EAAd,sBAAsCiT,GACjCtS,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACde,EAAWrE,EAASoM,KAAK3H,QAAQ6F,QAEjCtK,EAASoM,KAAK3H,QAAQD,KAAI,SAAA8M,GAClBA,EAAKtD,SAAW7J,EAAM6J,QACtBmG,EAAgB,aAIxB5C,MAAM,8BAMpB,CAACwC,IAkCC,kBAAC,IAAMtC,SAAP,KACI,kBAACnP,EAAA,EAAD,CAAWrD,MAAO,CAAC6U,aAAc,SAC7B,kBAACvR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IACL,6BACI,6BAEA,kDAEA,6BACA,8BAEA,6BACI,6BAGI,kBAAC,IAAD,CACIrL,KAAK,QACLC,UAAW,EACXC,KAAK,IACLzD,MAAOwS,EACPK,YAnDrB,SAACC,EAAWC,EAAWxP,GAElCkP,EAAUK,GAEV,IAAIpD,EAAW,CACX9L,UAAUhB,EAAMgB,UAChB6I,OAAOzO,EAAKoF,IACZ4P,UAAUF,GAGdjU,QAAQC,IAAI4Q,GAEQ,OAAhBiD,GACA/C,KAAMC,KAAN,UAAchS,EAAd,kBAAkC6R,GAC7BlR,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACde,EAAW4P,EAAQ,GACnBE,EAAgB,UAEhB5C,MAAM,+CCqBfiD,GAxEC,SAACrQ,GAAS,MAGQvD,mBAAS,IAHjB,mBAGfwE,EAHe,KAGPqP,EAHO,OAIC7T,oBAAS,GAJV,mBAIXkP,GAJW,aAKkBlP,oBAAS,GAL3B,mBAKf6S,EALe,KAKDiB,EALC,KAQhBC,EAAkB,CACpBxP,UAAWhB,EAAMyQ,MAAMC,OAAOC,WAG5BC,EAAoB,SAAA5P,GzBDF,IAAC6P,KyBIR7P,EzBHV3F,MAAM,GAAD,OAAIJ,EAAJ,oBAAmB4V,GAAY,CACvCvV,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,OyBHD1D,MAAK,SAAAqM,GACtBA,EAAK3I,IACJqM,EAAS1D,EAAK3I,KAEdgR,EAAYrI,OAOxB7H,qBAAU,WAEN,IAAMY,EAAYhB,EAAMyQ,MAAMC,OAAOC,UACrCC,EAAkB5P,GAElBuN,KAAMtB,KAAN,UAAchS,EAAd,yBAAyCuV,GACpC5U,MAAK,SAAAC,GACEA,EAASoM,KAAK9I,SACdlD,QAAQC,IAAIL,EAASoM,KAAKhH,SAC1BsP,EAAgB1U,EAASoM,KAAK6I,WAE9B1D,MAAM,+BAGpB,IAMF,OACI,yBAAKxS,UAAU,QACH,wBAAIA,UAAU,aAAd,IAA4BqG,GAAWA,EAAQyC,aAC/C,kBAACtF,EAAA,EAAD,KACI,yBAAMtD,MAAO,CAACoI,OAAO,SAEbjC,GAAYA,EAAQ0C,aAAe,kBAAC,EAAD,CAAM1C,QAASA,EACTC,gBAAgB,MAMrE,6BACI,kBAAC,GAAD,CAAQD,SAAO,EAACD,UAAWC,EAAQT,IAAKqJ,OAAQxN,aAAaC,QAAQ,aAGzE,6BACI,kBAAC,GAAD,CAAUgT,aAAcA,EAAclB,OAAQnN,EAAQT,IAAKgO,gBAtBzD,SAACuC,GACnBR,EAAgBjB,EAAa0B,OAAOD,U,oBCiJ7BE,OA5Lf,WAAsB,MAGI9U,IAAff,EAHW,EAGXA,KAAM+G,EAHK,EAGLA,MAHK,EAIU1F,mBAAS,CACjCiH,YAAa,GACbC,YAAa,GACbE,aAAc,GACdqN,WAAY,GACZpN,WAAY,GACZqN,SAAU,GACVhN,gBAAiB,GACjBiN,aAAc,GACdpV,MAAO,GACPY,SAAS,EACTyU,aAAc,GACdC,SAAU,GACVC,mBAAmB,IAjBL,mBAIXzU,EAJW,KAIHC,EAJG,KAsBd2G,EAYI5G,EAZJ4G,YACAC,EAWI7G,EAXJ6G,YACAE,EAUI/G,EAVJ+G,aACAqN,EASIpU,EATJoU,WAGA/M,GAMIrH,EARJgH,WAQIhH,EAPJqU,SAOIrU,EANJqH,iBACAnI,EAKIc,EALJd,MACAY,EAIIE,EAJJF,QACAyU,EAGIvU,EAHJuU,aACAC,EAEIxU,EAFJwU,SAKEtU,GAHEF,EADJyU,kBAIiB,SAAA3S,GAAI,OAAI,SAAA1B,GACzB,IAAM+K,EAAgB,iBAATrJ,EAA0B1B,EAAEC,OAAOqU,MAAM,GAAKtU,EAAEC,OAAOC,MACpEkU,EAASG,IAAI7S,EAAKqJ,GAClBlL,EAAU,eAAID,EAAL,eAAc8B,EAAMqJ,QAiBjC7H,qBAAU,WAZNR,IAAgBhE,MAAK,SAAAC,GACVA,EAASG,MACRe,EAAU,eAAID,EAAL,CAAYd,MAAOH,EAASG,SAGrCe,EAAU,eAAID,EAAL,CAAYoU,WAAYrV,EAAWyV,SAAU,IAAII,eAStEC,KAAkB/H,SACpB,IAGF,IAAMgI,EAAgB,SAAC1U,GACnBA,EAAEI,iBACFP,EAAU,eAAID,EAAL,CAAad,MAAO,GAAIY,SAAS,KzBrEvB,SAACiN,EAAO1H,EAAMlB,GACrC,OAAO5F,MAAM,GAAD,OAAIJ,EAAJ,wBAAuB4O,GAAU,CACzCvO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR+N,cAAc,UAAD,OAAYpH,IAE7B1G,KAAMwF,IAELrF,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MyB0DhB6V,CAAWzW,EAAKoF,IAAK2B,EAAQmP,GACxB1V,MAAK,SAAAkW,GACCA,EAAM9V,MACLe,EAAU,eAAID,EAAL,CAAad,MAAO8V,EAAM9V,SAEnCe,EAAU,eACHD,EADE,CAEL4G,YAAa,GACbC,YAAa,GACbE,aAAc,GACdM,gBAAiB,GACjBiN,aAAc,GACdtN,WAAY,GACZqN,SAAU,GACVvU,SAAS,EACTyU,aAAcS,EAAMpO,mBAqFxC,OACI,kBAAC,EAAD,CAAQhJ,MAAM,gBAAgBC,YAAW,gBAAWS,EAAK6D,UAAhB,6BACjCrE,UAAU,kCAEd,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IAzBrBpP,GACI,yBAAKhC,UAAU,uBACX,2CAMR,yBAAKA,UAAU,mBAAmBE,MAAO,CAACkD,QAAUqT,EAAe,GAAI,SACnE,sCAAQA,GAAR,wBAKJ,yBAAKzW,UAAU,qBAAqBE,MAAO,CAACkD,QAAUhC,EAAQ,GAAI,SAC7DA,GAxEL,kBAACsC,EAAA,EAAD,CAAO1D,UAAU,OAAOyL,SAAUuL,GAC9B,kBAACtT,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAClB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,eAAiB4B,KAAK,OAAOC,YAAY,qBAAqBzB,MAAOsG,KAE9G,kBAACpF,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAClB,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,eAAiB8L,GAAG,WAAWiJ,KAAK,IAAIlT,YAAY,4BAA4BzB,MAAOuG,KAEhI,kBAACrF,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,gBAAiB4B,KAAK,SAASC,YAAY,sBAAsBzB,MAAOyG,KAEjH,kBAACvF,EAAA,EAAKC,MAAN,CAAaC,UAAU,qBACnB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcoK,GAAG,SAASjI,KAAK,KAAKmR,QAAM,EACtCrT,SAAU3B,EAAa,eACvB,kEACCkU,GAAcA,EAAW7Q,KAAI,SAAC4R,EAAI1R,GAAL,OACzB,4BAAQG,IAAOH,EAAOnD,MAAO6U,EAAIzR,KAAMyR,EAAIlO,mBAKxD,kBAACzF,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,mBAAoB4B,KAAK,SAASC,YAAY,0BAA0BzB,MAAO+G,KAExH,kBAAC7F,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcoK,GAAG,SAASjI,KAAK,KAAKmR,QAAM,EAC5BrT,SAAU3B,EAAa,aACjC,kEACJ,4BAAQI,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAGJ,kBAACkB,EAAA,EAAK4T,KAAN,CACIvP,GAAG,cACHhC,KAAK,eACLwR,OAAO,UACPC,MAAM,eACNJ,QAAM,EACNrT,SAAU3B,EAAa,kBAE3B,6BAAK,6BACL,kBAAC8B,EAAA,EAAD,CAAQf,QAAQ,kBAAkBa,KAAK,UAAvC,qBC/DGyT,GA5EW,WAAK,MAGLlW,IAAff,EAHoB,EAGpBA,KAAM+G,EAHc,EAGdA,MAHc,EAIU1F,mBAAS,IAJnB,mBAIpB6V,EAJoB,KAIPC,EAJO,KAQrBC,EAAiB,W1B0BhBnX,MAAM,GAAD,OAAIJ,EAAJ,uBAA6B,CACrCK,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,M0B/BX1D,MAAK,SAAA+J,GACZA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhBuW,EAAa5M,OAMnB8M,EAAgB,SAAA5B,I1B8DG,SAAC7P,EAAY6I,EAAS1H,GAC/C,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,oBAAmB+F,EAAnB,YAAgC6I,GAAS,CACjDvO,OAAQ,SACRC,QAAS,CACLC,OAAQ,mBACR,eAAe,mBACf+N,cAAc,UAAD,OAAYpH,MAI5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,O0B1E1BoT,CAAc7B,EAAUzV,EAAKoF,IAAI2B,GAAOvG,MACpC,SAAA+J,GACOA,EAAI3J,MACHC,QAAQC,IAAIyJ,EAAI3J,OAEhBwW,QAYhB,OALApS,qBAAU,WACFoS,MACL,IAIC,kBAAC,EAAD,CAAQ9X,MAAM,iBAAiBC,YAAY,uBAAuBC,UAAU,mBAE5E,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIzD,UAAU,eAAd,6BAAuD0X,EAAYnM,QACnE,6BACA,kBAAC+D,GAAA,EAAD,CAAWnM,QAAQ,SACduU,EAAYjS,KAAI,SAACY,EAAQV,GAAT,OACb,kBAAC2J,GAAA,EAAUC,KAAX,CACIzJ,IAAOH,EACP3F,UAAU,kCAEV,gCAASqG,EAAQyC,aACjB,kBAAC,IAAD,CAAMxF,GAAE,qCAAgC+C,EAAQT,MAC5C,8BACK,kBAAC4D,EAAA,EAAD,CAAOrG,QAAQ,WAAf,YAIT,kBAAC,IAAD,CAAMG,GAAG,gCACL,0BAAMtD,UAAU,iBAAiBmE,QAAS,kBAAM0T,EAAcxR,EAAQT,OAAM,kBAAC4D,EAAA,EAAD,CAAOrG,QAAQ,UAAf,sBCoMjG4U,OA7Pf,YAAiC,IAATlC,EAAQ,EAARA,MAAQ,EAGNtU,IAAff,EAHqB,EAGrBA,KAAM+G,EAHe,EAGfA,MAHe,EAKA1F,mBAAS,CACjCiH,YAAa,GACbC,YAAa,GACbE,aAAc,GACdY,YAAY,GACZC,eAAe,GACfwM,WAAY,GACZpN,WAAY,GACZqN,SAAU,GACVhN,gBAAiB,GACjBiN,aAAc,GACdpV,MAAO,GACPY,SAAS,EACTyU,aAAc,GACdC,SAAU,GACVC,mBAAmB,IApBK,mBAKrBzU,EALqB,KAKbC,EALa,KAyBxB2G,EAcA5G,EAdA4G,YACAC,EAaA7G,EAbA6G,YACAE,EAYA/G,EAZA+G,aACAqN,EAWApU,EAXAoU,WACAzM,EAUA3H,EAVA2H,YAGAC,GAOA5H,EATAgH,WASAhH,EARAqU,SAQArU,EAPA4H,gBACAP,EAMArH,EANAqH,gBACAnI,EAKAc,EALAd,MACAY,EAIAE,EAJAF,QACAyU,EAGAvU,EAHAuU,aACAC,EAEAxU,EAFAwU,SACAC,EACAzU,EADAyU,kBAIEvU,EAAe,SAAA4B,GAAI,OAAI,SAAA1B,GACzB,IAAM+K,EAAgB,iBAATrJ,EAA0B1B,EAAEC,OAAOqU,MAAM,GAAKtU,EAAEC,OAAOC,MACpEkU,EAASG,IAAI7S,EAAKqJ,GAClBlL,EAAU,eAAID,EAAL,eAAc8B,EAAMqJ,OAmB3B2K,EAAc,SAAC/B,I3BnBC,SAACA,GACvB,OAAOxV,MAAM,GAAD,OAAIJ,EAAJ,oBAAmB4V,GAAY,CACvCvV,OAAQ,QAEPM,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAGrD,QAAQC,IAAIoD,O2BazBuT,CAAYhC,GAAWjV,MAAK,SAAA+J,GACjBA,EAAI3J,MACHe,EAAU,eAAID,EAAL,CAAad,MAAO2J,EAAI3J,UAEjCe,EAAU,eACHD,EADE,CAEL4G,YAAaiC,EAAIjC,YAAYC,YAAYgC,EAAIhC,YAC7CG,WAAY6B,EAAI7B,WAAWtD,IAC3BqD,aAAc8B,EAAI9B,aAClBY,YAAakB,EAAIlB,YACjBN,gBAAiBwB,EAAIxB,gBACrBO,eAAgBiB,EAAIjB,eACpByM,SAAUxL,EAAIwL,SACdG,SAAU,IAAII,YA1B9B9R,IAAgBhE,MAAK,SAAAC,GACVA,EAASG,MACRe,EAAU,eAAID,EAAL,CAAYd,MAAOH,EAASG,SAGrCe,EAAU,CAACmU,WAAYrV,EAAWyV,SAAU,IAAII,mBA+BhEtR,qBAAU,WACNwS,EAAYnC,EAAMC,OAAOG,WACzBc,KAAkB/H,SAGpB,IAGF,IAAMgI,EAAgB,SAAC1U,GACnBA,EAAEI,iBACFP,EAAU,eAAID,EAAL,CAAad,MAAO,GAAIY,SAAS,K3BvCrB,SAACoE,EAAY6I,EAAS1H,EAAM2Q,GACrD,OAAOzX,MAAM,GAAD,OAAIJ,EAAJ,oBAAmB+F,EAAnB,YAAgC6I,GAAS,CACjDvO,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR+N,cAAc,UAAD,OAAYpH,IAE7B1G,KAAMqX,IAGLlX,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,M2B4B1ByT,CAActC,EAAMC,OAAOG,UAAUzV,EAAKoF,IAAK2B,EAAQmP,GAClD1V,MAAK,SAAAkW,GACCA,EAAM9V,MACLe,EAAU,eAAID,EAAL,CAAad,MAAO8V,EAAM9V,UAEnCe,EAAU,eACHD,EADE,CAEL4G,YAAa,GACbC,YAAa,GACbE,aAAc,GACdY,YAAY,GACZN,gBAAiB,GACjBiN,aAAc,GACd1M,eAAe,GACf1I,OAAO,EACPY,SAAS,EACTyU,aAAcS,EAAMpO,eAKxBsP,YAAW,WACPjW,EAAU,eACHD,EADE,CAELyU,mBAAmB,OAIxB,UAoGnB,OACI,kBAAC,EAAD,CAAQ7W,MAAM,mBAAmBC,YAAW,gBAAWS,EAAK6D,UAAhB,4BACpCrE,UAAU,kCAEd,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IAlCrBpP,GACI,yBAAKhC,UAAU,uBACX,2CAcR,yBAAKA,UAAU,mBAAmBE,MAAO,CAACkD,QAAUqT,EAAe,GAAI,SACnE,sCAAQA,GAAR,0BAKJ,yBAAKzW,UAAU,qBAAqBE,MAAO,CAACkD,QAAUhC,EAAQ,GAAI,SAC7DA,GAvFL,kBAACsC,EAAA,EAAD,CAAO1D,UAAU,OAAOyL,SAAUuL,GAC9B,kBAACtT,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAClB,kBAACF,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,eAAiB4B,KAAK,OAAOC,YAAY,qBAAqBzB,MAAOsG,KAE9G,kBAACpF,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAClB,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,eAAiB8L,GAAG,WAAWiJ,KAAK,IAAIlT,YAAY,4BAA4BzB,MAAOuG,KAEhI,kBAACrF,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,gBAAiB4B,KAAK,SAASC,YAAY,sBAAsBzB,MAAOyG,KAEjH,kBAACvF,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,yBACI,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,eAAgB4B,KAAK,SAASC,YAAY,yBAAyBzB,MAAOqH,KAEvH,kBAACnG,EAAA,EAAKC,MAAN,CAAYC,UAAU,wBAClB,kBAACF,EAAA,EAAKG,MAAN,qCACA,kBAACH,EAAA,EAAKI,QAAN,CAAc0M,UAAQ,EAACxM,KAAK,SAASqU,KAAK,OAAQ7V,MAAOsH,KAE7D,kBAACpG,EAAA,EAAKC,MAAN,CAAaC,UAAU,qBACnB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcoK,GAAG,SAASjI,KAAK,KAAKmR,QAAM,EAC5BrT,SAAU3B,EAAa,eACjC,kEACCkU,GAAcA,EAAW7Q,KAAI,SAAC4R,EAAI1R,GAAL,OACzB,4BAAQG,IAAOH,EAAOnD,MAAO6U,EAAIzR,KAAMyR,EAAIlO,mBAIxD,kBAACzF,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU3B,EAAa,mBAAoB4B,KAAK,SAASC,YAAY,0BAA0BzB,MAAO+G,KAExH,kBAAC7F,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,yBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcoK,GAAG,SAASjI,KAAK,KAAKmR,QAAM,EAC5BrT,SAAU3B,EAAa,aACjC,kEACA,4BAAQI,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAGR,kBAACkB,EAAA,EAAK4T,KAAN,CACIvP,GAAG,cACHhC,KAAK,eACLwR,OAAO,UACPC,MAAM,eACNJ,QAAM,EACNrT,SAAU3B,EAAa,kBAE3B,6BAAK,6BACL,kBAAC8B,EAAA,EAAD,CAAQf,QAAQ,kBAAkBa,KAAK,UAAvC,mBAkBa,WACjB,GAAG2S,IACKvV,EACA,OAAS,kBAACmH,EAAA,EAAD,CAAUjF,GAAG,MA6BbgV,Q,qBC/EVC,GA5JE,SAAC,GAAgB,IAAf9I,EAAc,EAAdA,SAAc,EACL5N,mBAAS,CAC7BG,SAAS,EACTuC,SAAS,EACTiU,YAAa,KACbpX,OAAO,EACPqX,SAAU,GACVC,QAAS,KAPgB,mBACtBrL,EADsB,KAChBsL,EADgB,KAUvB1J,EAAS1N,KAAiBA,IAAcf,KAAKoF,IAC7C2B,EAAQhG,KAAiBA,IAAcgG,MAEvCqR,EAAW,SAAC3J,EAAQ1H,I7BKU,SAAC0H,EAAQ1H,GAC7C,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,+BAA8B4O,GAAU,CAC/CvO,OAAQ,MACTC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,MAC5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,O6Bd1BmU,CAAwB5J,EAAQ1H,GAAOvG,MAAK,SAAAqM,GACpCA,EAAKjM,MACLuX,EAAQ,eAAItL,EAAL,CAAUjM,MAAOiM,EAAKjM,SAE7BuX,EAAQ,CAACH,YAAanL,EAAKmL,kBAKvChT,qBAAU,WACNoT,EAAS3J,EAAQ1H,KAClB,IAEH,IA6FkBnG,EAMEmD,EAnGduU,EAAgB,SAAAxO,GAClBqO,EAAQ,eAAKtL,EAAN,CAAYqL,QAASpO,EAAM/H,OAAOC,UAGvCuW,EAAW,WACb,OAAOtJ,EAASuJ,QAAO,SAACC,EAAc3D,GAClC,OAAO2D,EAAe3D,EAAUpO,MAAQoO,EAAUxL,iBACnD,IAaDoP,EAAW7L,EAAKqL,QAEhBS,EAAM,WACRR,EAAQ,CAAC3W,SAAS,IAIHqL,EAAKoL,SAASW,uBAAuBpY,MACnD,SAAAqM,GAMO,IAAMgM,EAAc,CAChBC,mBALIjM,EAAKkM,MAMTC,OAAQT,M7BhCE,SAAC9J,EAAQ1H,EAAO8R,GAC1C,OAAO5Y,MAAM,GAAD,OAAIJ,EAAJ,8BAA6B4O,GAAU,CAChDvO,OAAQ,OACPC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,IAE5B1G,KAAMC,KAAKC,UAAUsY,KAEpBrY,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,O6BqBnB+U,CAAexK,EAAQ1H,EAAO8R,GACzBrY,MAAK,SAAAC,GAIF,IAAMyY,EAAgB,CAClBjK,SAASA,EACTkK,eAAe1Y,EAAS2Y,YAAY7R,GACpCyR,OAAOvY,EAAS2Y,YAAYJ,OAC5Bd,QAAQQ,I7B1BT,SAACjK,EAAQ1H,EAAOmS,GACvC,OAAOjZ,MAAM,GAAD,OAAIJ,EAAJ,yBAAwB4O,GAAU,CAC1CvO,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,IAE7B1G,KAAMC,KAAKC,UAAU,CAAC8Y,MAAMH,MAE3B1Y,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAIrD,QAAQC,IAAIoD,O6BgBVoV,CAAY7K,EAAO1H,EAAMmS,GACpB1Y,MAAK,SAAAC,GACFgE,GAAU,WACN5D,QAAQC,IAAI,kCACZqX,EAAQ,CAAC3W,SAAS,EAAMuC,SAAS,aAMhDpD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZuX,EAAQ,CAAC3W,SAAS,UAG7Bb,OAAM,SAAAC,GAEHuX,EAAQ,eAAItL,EAAL,CAAWjM,MAAOA,EAAM2Y,eAIrCC,EAAa,kBACf,yBAAKC,OAAQ,kBAAMtB,EAAQ,eAAItL,EAAL,CAAWjM,MAAO,QAClB,OAArBiM,EAAKmL,aAAwB/I,EAASlE,OAAS,EAC5C,6BACI,yBAAKvL,UAAU,mBACX,2BAAOA,UAAU,cAAjB,qBACA,8BACI+D,SAAU+U,EACV9Y,UAAU,eACVwC,MAAO6K,EAAKqL,QACZzU,YAAY,0CAGpB,kBAAC,KAAD,CAAQiW,QAAS,CACbC,cAAe9M,EAAKmL,aACtB4B,WAAY,SAAA3B,GAAQ,OAAIpL,EAAKoL,SAAWA,KAC1C,4BAAQtU,QAASgV,EAAKnZ,UAAU,6BAAhC,QAEJ,OA4BZ,OACI,6BACI,yCAAe+Y,KACF1L,EAAKrL,SALkB,2CAhBxBuC,EAsBC8I,EAAK9I,QArBf,yBAAKvE,UAAU,mBAAmBE,MAAO,CAACkD,QAASmB,EAAU,GAAK,SAAlE,yCAKa,SAAAA,GACbA,GAEK/C,OAAOwB,SAASC,QAAO,GAc9BoF,CAAYgF,EAAK9I,UA7BRnD,EA8BCiM,EAAKjM,MA7BpB,yBAAKpB,UAAU,qBAAqBE,MAAO,CAACkD,QAAShC,EAAQ,GAAK,SAC7DA,IApFEG,IACH,6BAAMyY,KAEN,kBAAC,IAAD,CAAM1W,GAAG,WACL,4BAAQtD,UAAU,mBAAlB,0BCaDqa,GA9DF,WAAM,IAAD,EACYxY,mBAAS,IADrB,mBACPyY,EADO,KACAC,EADA,OAGI1Y,oBAAS,GAHb,mBAGRiF,EAHQ,KAGJF,EAHI,KAKdpB,qBAAU,WACN+U,E5BsCe,qBAAT/Y,QACFC,aAAaC,QAAQ,QACdZ,KAAKa,MAAMF,aAAaC,QAAQ,SAGxC,M4B1CL,CAACoF,IA6BH,OACI,kBAAC,EAAD,CACIhH,MAAO,gBACPC,YAAa,mCAEb,0BAAMya,WAAS,SAASC,cAAY,OAAOC,cAAY,MACvD,yBAAK1a,UAAU,OACX,yBAAKA,UAAU,aAEjB,yBAAKA,UAAU,YACVsa,EAAM/O,OAAO,EArCT,SAAA+O,GACf,OACI,6BACI,+CAAqBA,EAAM/O,QAC3B,4BAAI,kBAAC,IAAD,CAAMvL,UAAU,cAAcsD,GAAG,KAAjC,wBAGHgX,EAAM7U,KAAI,SAACY,EAAS8D,GAAV,OAAe,kBAAC,EAAD,CACtBrE,IAAKqE,EACL9D,QAASA,EACTE,cAAc,EACdG,kBAAkB,EAClBF,eAAe,EACfC,eAAe,EACfE,mBAAmB,EACnBC,OAAQA,EACRE,IAAKA,QAqBW6T,CAAaL,GAbzC,mDAAwB,6BAAxB,IAA8B,kBAAC,IAAD,CAAMhX,GAAG,KAAT,uBAgBtB,yBAAKtD,UAAU,aAGf,yBAAKA,UAAU,aACX,4CACA,6BACA,kBAAC,GAAD,CAAUyP,SAAU6K,SCFzBM,GArDE,WAAM,IAAD,EACQ/Y,mBAAS,IADjB,mBACXyY,EADW,KACJC,EADI,OAGA1Y,oBAAS,GAHT,mBAGZiF,EAHY,KAGRF,EAHQ,KAKlBpB,qBAAU,WACN+U,E1B0Be,qBAAT/Y,QACFC,aAAaC,QAAQ,YACdZ,KAAKa,MAAMF,aAAaC,QAAQ,aAGxC,M0B7BL,CAACoF,IA4BH,OACI,kBAAC,EAAD,CACIhH,MAAO,YACPC,YAAa,qBAEb,yBAAKC,UAAU,OACX,yBAAKA,UAAU,aAEf,yBAAMA,UAAU,YACXsa,EAAM/O,OAAO,EAnCX,SAAA+O,GACf,OACI,6BACI,+CAAqBA,EAAM/O,QAC3B,4BAAI,kBAAC,IAAD,CAAMvL,UAAU,cAAcsD,GAAG,KAAjC,wBAGHgX,EAAM7U,KAAI,SAACY,EAAS8D,GAAV,OAAe,kBAAC,EAAD,CACtBrE,IAAKqE,EACL9D,QAASA,EACTE,cAAc,EACdE,eAAe,EACfE,mBAAmB,EACnBD,kBAAkB,EAClBE,OAAQA,EACRE,IAAKA,QAoBa6T,CAAaL,GAZ3C,wDAA6B,6BAA7B,IAAmC,kBAAC,IAAD,CAAMhX,GAAG,KAAT,0BCkE5BuX,GAjGK,SAAC,GAAa,IAAZhF,EAAW,EAAXA,MAAW,EACDhU,mBAAS,CACjCwC,UAAW,GACXC,SAAU,GACVxC,MAAO,GACPC,SAAU,GACVX,OAAO,EACPmD,SAAS,IAPgB,mBACtBrC,EADsB,KACdC,EADc,KAUtBoF,EAAShG,IAATgG,MACAlD,EAA6CnC,EAA7CmC,UAAUC,EAAmCpC,EAAnCoC,SAASxC,EAA0BI,EAA1BJ,MAAMC,EAAoBG,EAApBH,SAASwC,EAAWrC,EAAXqC,QAezCiB,qBAAU,WAZG,IAACyJ,IAaL4G,EAAMC,OAAO7G,OAZlBP,GAAaO,EAAO1H,GAAOvG,MAAK,SAAA4B,GACxBA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,OAAO,KAG5Be,EAAU,eAAID,EAAL,CAAYmC,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,cAQvG,IAEF,IAAMgZ,EAAgB,SAAAzW,GAAS,OAAI,SAAA/B,GAC/BH,EAAU,eAAID,EAAL,aAAad,OAAO,GAAQiD,EAAY/B,EAAEC,OAAOC,WAGxDC,EAAa,SAAAH,GACfA,EAAEI,iBACFkM,GAAeiH,EAAMC,OAAO7G,OAAO1H,EAAO,CAAClD,YAAWC,WAAUxC,QAAOC,aAAWf,MAAK,SAAA4B,GAC/EA,EAAQxB,MACRC,QAAQC,IAAIsB,EAAQxB,OAGpByN,GAAWjM,GAAS,WAChBT,EAAU,eAAIS,EAAL,CAAayB,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,MAAMyC,SAAS,YA2C7H,OACI,kBAAC,EAAD,CAAQzE,MAAM,aAAaC,YAAY,oBAAoBC,UAAU,mBAEjE,wBAAIA,UAAU,SAAd,kBAlCkB,SAACqE,EAAUC,EAASxC,EAAMC,GAA1B,OACtB,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,aAAc9W,KAAK,OAAOxB,MAAO6B,KAE3E,kBAACX,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,OAAOxB,MAAO8B,KAE1E,kBAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc0M,UAAQ,EAACzM,SAAU+W,EAAc,SAAW9W,KAAK,QAAQxB,MAAOV,KAElF,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,WAAWxB,MAAOT,KAE9E,kBAACmC,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,cAcXsY,CAAkB1W,EAAUC,EAASxC,EAAMC,GAzC/B,SAACwC,GAClB,GAAIA,EACD,OAAO,kBAAC,IAAD,CAAUjB,GAAG,wBAwClBgV,CAAa/T,KCUXyW,GApGiB,SAAC,GAAa,IAAZnF,EAAW,EAAXA,MAAW,EAEbhU,mBAAS,CACjCwC,UAAW,GACXC,SAAU,GACVxC,MAAO,GACPC,SAAU,GACVX,OAAO,EACPmD,SAAS,IAR4B,mBAElCrC,EAFkC,KAE1BC,EAF0B,KAUlCoF,EAAShG,IAATgG,MACAlD,EAA6CnC,EAA7CmC,UAAUC,EAAmCpC,EAAnCoC,SAASxC,EAA0BI,EAA1BJ,MAAMC,EAAoBG,EAApBH,SAASwC,EAAWrC,EAAXqC,QAczCiB,qBAAU,WAXG,IAACyJ,IAYL4G,EAAMC,OAAO7G,OAXlBP,GAAaO,EAAO1H,GAAOvG,MAAK,SAAA4B,GACxBA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,OAAO,KAG5Be,EAAU,eAAID,EAAL,CAAYmC,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,cAOvG,IAGF,IAAMgZ,EAAgB,SAAAzW,GAAS,OAAI,SAAA/B,GAC/BH,EAAU,eAAID,EAAL,aAAad,OAAO,GAAQiD,EAAY/B,EAAEC,OAAOC,WAIxDC,EAAa,SAAAH,GACfA,EAAEI,iBACFkM,GAAeiH,EAAMC,OAAO7G,OAAO1H,EAAO,CAAClD,YAAWC,WAAUxC,QAAOC,aAAWf,MAAK,SAAA4B,GAC/EA,EAAQxB,MACRC,QAAQC,IAAIsB,EAAQxB,OAGpByN,GAAWjM,GAAS,WAChBT,EAAU,eAAIS,EAAL,CAAayB,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,MAAMC,SAASa,EAAQb,SAASwC,SAAS,YAsCvJ,OACI,kBAAC,EAAD,CAAQzE,MAAM,+BAA+BC,YAAY,sBAAsBC,UAAU,mBAGrF,kBAACuD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK2N,GAAI,IA9BC,SAAC/M,EAAUC,EAASxC,EAAMC,GAA1B,OACtB,kBAAC2B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,aAAc9W,KAAK,OAAOxB,MAAO6B,KAE3E,kBAACX,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,OAAOxB,MAAO8B,KAE1E,kBAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc0M,UAAQ,EAACzM,SAAU+W,EAAc,SAAU9W,KAAK,QAAQxB,MAAOV,KAEjF,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,WAAWxB,MAAOT,KAE9E,kBAACmC,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,WAcasY,CAAkB1W,EAAUC,EAASxC,EAAMC,GAvC3C,SAACwC,GAClB,GAAIA,EACA,OAAO,kBAAC,IAAD,CAAUjB,GAAG,8BAsCPgV,CAAa/T,QCxBvB0W,GApEF,WAAK,IAAD,EACYpZ,mBAAS,IADrB,mBACNqZ,EADM,KACCC,EADD,OAEM5Z,IAAZf,EAFM,EAENA,KAAK+G,EAFC,EAEDA,MAGN6T,EAAK,YjC6FS,SAACnM,EAAO1H,GAC5B,OAAO9G,MAAM,GAAD,OAAIJ,EAAJ,uBAAsB4O,GAAS,CACvCvO,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB+N,cAAc,UAAD,OAAYpH,MAG5BvG,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBC,OAAM,SAAAuD,GAAG,OAAErD,QAAQC,IAAIoD,OiCxGxB2W,CAAW7a,EAAKoF,IAAI2B,GAAOvG,MAAK,SAAAqM,GACzBA,EAAKjM,MACJC,QAAQC,IAAI+L,EAAKjM,OAEjB+Z,EAAU9N,OAItB7H,qBAAU,WACN4V,MACF,IAYF,OACI,kBAAC,EAAD,CAAQtb,MAAM,SAASC,YAAW,gBAAWS,EAAK6D,UAAhB,wBAC1BrE,UAAU,kCAEf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBAdrBkb,EAAO3P,OAAO,EAET,wBAAIvL,UAAU,gBAAd,qBAAgDkb,EAAO3P,QAGpD,wBAAIvL,UAAU,eAAd,4BAWGkb,EAAOzV,KAAI,SAAC6V,EAAEC,GACX,OACI,yBAAKvb,UAAU,OAAO8F,IAAKyV,EAAQrb,MAAO,CAACsb,aAAa,qBACpD,wBAAIxb,UAAU,QACV,0BAAMA,UAAU,cAAhB,YAAuCsb,EAAE1V,IAAzC,MAGJ,wBAAI5F,UAAU,mBACV,wBAAIA,UAAU,mBAAd,cACgBsb,EAAE9B,QAElB,wBAAIxZ,UAAU,mBAAd,cACgBsb,EAAE9a,KAAK6D,WAEvB,wBAAIrE,UAAU,mBAAd,iBACoBoJ,IAAOkS,EAAEjS,WAAWC,WAExC,wBAAItJ,UAAU,mBAAd,gBACiBsb,EAAE5C,UAGvB,wBAAI1Y,UAAU,yBAAd,gCACkCsb,EAAE7L,SAASlE,gB,SCpB7DkQ,GAxCD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAgBpF,EAAe,EAAfA,WAAe,EAEdzU,mBAAS,IAFK,mBAErC8Z,EAFqC,KAE1BC,EAF0B,KA0B5C,OAAOtF,EAAW7Q,KAAI,SAAC+L,EAAS7L,GAAV,OAClB,yBAAMG,IAAKH,GACP,kBAACjC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYoE,GAAG,oBACX,kBAACrE,EAAA,EAAK+X,MAAN,CAAY1X,UApBRoG,EAoB8BqH,EAAS5L,IApBlC,WACrB,IAAMiW,EAAgBF,EAAUG,QAAQ3R,GAClC4R,EAAS,aAAOJ,IAEA,IAAnBE,EACCE,EAAUrU,KAAKyC,GAEf4R,EAAU3R,OAAOyR,EAAe,GAGpCD,EAASG,GAETL,EAAgBK,KAQ6CvZ,MAAOmZ,EAAUG,SAAyB,IAAjBtK,EAAS5L,KAAY5B,KAAK,WAAWwT,MAAOhG,EAASrI,kBApB3H,IAAAgB,MC8GT6R,GAjHI,WAAM,IAAD,EAEQna,mBAAS,IAFjB,mBAEboa,EAFa,KAELC,EAFK,OAGMra,mBAAS,IAHf,mBAGNkP,GAHM,aAIoBlP,mBAAS,CAC7Csa,WAAW,CAAC3K,SAAU,MALN,mBAIb4K,EAJa,KAICC,EAJD,OAOMxa,mBAAS,GAPf,mBAObgD,EAPa,aAQIhD,mBAAS,IARb,mBAQbya,EARa,KAQPC,EARO,OAS0B1a,mBAAS,IATnC,mBASb2a,EATa,KASIC,EATJ,OAUG5a,mBAAS,GAVZ,mBAUboE,EAVa,KAURyW,EAVQ,KAoCdC,EAAc,SAACC,GACjBvb,QAAQC,IAAI,MAAMsb,GAClBjY,EAAkB2X,EAAKzX,EAAM+X,GAAY5b,MAAK,SAAAC,GACvCA,EAASG,MACR2P,EAAS9P,EAASG,QAGlBqb,EAAmBxb,EAAS4S,QAC5B6I,EAAQzb,EAASgF,MACjBsW,EAAQ,QAMpB/W,qBAAU,WApCNR,IAAgBhE,MAAK,SAAAC,GACVA,EAASG,MACT2P,EAAS9P,EAASG,OAGjB8a,EAAUjb,MAiCtB0b,EAAYL,EAAKzX,EAAMuX,EAAaD,cACtC,IAGF,IAAMU,EAAmB,WAErB,IAAKC,EAAUR,EAAKzX,EAEpBF,EAAkBmY,EAAQjY,EAAMuX,EAAaD,YAAYnb,MAAK,SAAAC,GACvDA,EAASG,MACR2P,EAAS9P,EAASG,QAGlBqb,EAAmB,GAAD,oBAAKD,GAAL,aAAwBvb,EAAS4S,UACnD6I,EAAQzb,EAASgF,MACjBsW,EAAQO,QAapB,OACE,yBAAK9c,UAAU,gBACX,kBAACwD,EAAA,EAAD,KACI,yBAAKxD,UAAU,cACX,+CACA,yBAAKE,MAAO,CAACuQ,UAAU,KACnB,kBAAC,GAAD,CAAQiL,gBAAkB,SAAAS,GAAU,OA7D9B,SAACA,EAAYY,GACjC,IAAMC,EAAa,eAAOZ,GAE1BY,EAAcb,WAAWY,GAAeZ,EAGxCQ,EAAYP,EAAaD,YACzBE,EAAgBW,GAsDsCtB,CAAgBS,EAAW,aAAc7F,WAAY2F,MAKrG,yBAAKjc,UAAU,eACZ,wBAAIA,UAAU,aAAd,YACC,kBAACwD,EAAA,EAAD,KACKgZ,EAAgB/W,KAAI,SAACY,EAASV,GAAV,OAEb,kBAAC,EAAD,CAAaG,IAAKH,EAAQU,QAASA,QAI/C,6BA1BNJ,EAAM,GAAKA,GAAOpB,GACd,kBAACX,EAAA,EAAD,CAAQC,QAAS0Y,EAAkB7c,UAAU,YAAYmD,QAAQ,UAAjE,iBCiBD8Z,GA/FK,SAAC,GAAa,IAAZpH,EAAW,EAAXA,MAAW,EACDhU,mBAAS,CACjCwC,UAAW,GACXC,SAAU,GACVxC,MAAO,GACPC,SAAU,GACVX,OAAO,EACPmD,SAAS,IAPgB,mBACtBrC,EADsB,KACdC,EADc,KAUtBoF,EAAShG,IAATgG,MACAlD,EAA6CnC,EAA7CmC,UAAUC,EAAmCpC,EAAnCoC,SAASxC,EAA0BI,EAA1BJ,MAAMC,EAAoBG,EAApBH,SAASwC,EAAWrC,EAAXqC,QAazCiB,qBAAU,WAXG,IAACyJ,IAYL4G,EAAMC,OAAO7G,OAXlBP,GAAaO,EAAO1H,GAAOvG,MAAK,SAAA4B,GACxBA,EAAQxB,MACRe,EAAU,eAAID,EAAL,CAAYd,OAAO,KAG5Be,EAAU,eAAID,EAAL,CAAYmC,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,cAOvG,IAEF,IAAMgZ,EAAgB,SAAAzW,GAAS,OAAI,SAAA/B,GAC/BH,EAAU,eAAID,EAAL,aAAad,OAAO,GAAQiD,EAAY/B,EAAEC,OAAOC,WAGxDC,EAAa,SAAAH,GACfA,EAAEI,iBACFkM,GAAeiH,EAAMC,OAAO7G,OAAO1H,EAAO,CAAClD,YAAWC,WAAUxC,QAAOC,aAAWf,MAAK,SAAA4B,GAC/EA,EAAQxB,MACRC,QAAQC,IAAIsB,EAAQxB,OAGpByN,GAAWjM,GAAS,WAChBT,EAAU,eAAIS,EAAL,CAAayB,UAAWzB,EAAQyB,UAAWC,SAAU1B,EAAQ0B,SAASxC,MAAOc,EAAQd,MAAMyC,SAAS,YA2C7H,OACI,kBAAC,EAAD,CAAQzE,MAAM,aAAaC,YAAY,oBAAoBC,UAAU,mBAEjE,wBAAIA,UAAU,SAAd,kBAlCkB,SAACqE,EAAUC,EAASxC,EAAMC,GAA1B,OACtB,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,aAAc9W,KAAK,OAAOxB,MAAO6B,KAE3E,kBAACX,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,OAAOxB,MAAO8B,KAE1E,kBAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc0M,UAAQ,EAACzM,SAAU+W,EAAc,SAAW9W,KAAK,QAAQxB,MAAOV,KAElF,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAU+W,EAAc,YAAa9W,KAAK,WAAWxB,MAAOT,KAE9E,kBAACmC,EAAA,EAAD,CAAQf,QAAQ,UAAUa,KAAK,SAASG,QAAS1B,GAAjD,cAcXsY,CAAkB1W,EAAUC,EAASxC,EAAMC,GAzC/B,SAACwC,GAClB,GAAIA,EACA,OAAO,kBAAC,IAAD,CAAUjB,GAAG,0BAwCnBgV,CAAa/T,KC3CX2Y,GA5BA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,GAAD,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxP,KAAK,UAAUyP,OAAK,EAAC7O,UAAW3L,IACvC,kBAAC,IAAD,CAAO+K,KAAK,UAAUyP,OAAK,EAAC7O,UAAW/N,IACvC,kBAAC,IAAD,CAAOmN,KAAK,IAAIyP,OAAK,EAAC7O,UAAWvB,KACjC,kBAAC,IAAD,CAAOW,KAAK,sBAAsByP,OAAK,EAAC7O,UAAWmH,KACnD,kBAAC,GAAD,CAAW/H,KAAK,sBAAsByP,OAAK,EAAC7O,UAAW8O,KACvD,kBAAC,GAAD,CAAY1P,KAAK,wBAAwByP,OAAK,EAAC7O,UAAWsB,KAC1D,kBAAC,GAAD,CAAmBlC,KAAK,4BAA4ByP,OAAK,EAAC7O,UAAWuB,KACrE,kBAAC,GAAD,CAAYnC,KAAK,gBAAgByP,OAAK,EAAC7O,UAAWsC,KAClD,kBAAC,GAAD,CAAYlD,KAAK,uBAAuByP,OAAK,EAAC7O,UAAW+O,KACzD,kBAAC,GAAD,CAAmB3P,KAAK,gBAAgByP,OAAK,EAAC7O,UAAW+H,KACzD,kBAAC,GAAD,CAAmB3I,KAAK,+BAA+ByP,OAAK,EAAC7O,UAAWmJ,KACxE,kBAAC,GAAD,CAAmB/J,KAAK,wCAAwCyP,OAAK,EAAC7O,UAAWyJ,KACjF,kBAAC,IAAD,CAAOrK,KAAK,QAAQyP,OAAK,EAAC7O,UAAW+L,KACrC,kBAAC,IAAD,CAAO3M,KAAK,YAAYyP,OAAK,EAAC7O,UAAWsM,KACzC,kBAAC,GAAD,CAAWlN,KAAK,uBAAuByP,OAAK,EAAC7O,UAAauM,KAC1D,kBAAC,GAAD,CAAmBnN,KAAK,mCAAmCyP,OAAK,EAAC7O,UAAW0M,KAC5E,kBAAC,GAAD,CAAmBtN,KAAK,uBAAuByP,OAAK,EAAC7O,UAAW2M,KAChE,kBAAC,IAAD,CAAOvN,KAAK,eAAeyP,OAAK,EAAC7O,UAAW0N,KAC5C,kBAAC,GAAD,CAAYtO,KAAK,wBAAwByP,OAAK,EAAC7O,UAAW2O,Q,cC1CtE,IACIK,IAAS9O,OACL,kBAAC,IAAM+O,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SAE/B,MAAOnb,IACJjB,QAAQC,IAAIgB,O","file":"static/js/main.ffec19c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poster11.71bc8b60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poster10.17d4fff3.png\";","module.exports = __webpack_public_path__ + \"static/media/poster8.5ee7be34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poster9.36e8d0b4.png\";","module.exports = __webpack_public_path__ + \"static/media/poster12.f976d9da.jpg\";","import React from 'react';\r\nimport \"../../styles.css\"\r\n\r\nconst Layout=  ({title=\"Title\",description=\"Description\",className,children}) => {\r\n\r\n    return (\r\n        <div >\r\n        <div className=\"jumbotron mt-5\" style={{paddingTop:30, paddingBottom:5}}>\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n            <div className={className}>{children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","export const API = process.env.REACT_APP_API_URL","import {API} from \"../Config\";\r\n\r\nexport const signUp = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json() //Return response when object found\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const signIn = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const signOut = (next) => {\r\n    if (typeof window !== 'undefined'){\r\n        localStorage.removeItem('jwt'); //Remove token from localstorage when the window is not empty\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then(response => {\r\n                console.log('signout',response);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\n//Save user data on local storage when a user sign in\r\nexport const validate = (content, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(content));\r\n        next();\r\n    }\r\n}\r\n\r\n//Hide signin, signout, signup links based on jwt\r\nexport const isValidated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport Layout from \"../ui/Layout\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {signIn, validate,isValidated} from \"../../validators\";\r\n\r\nconst SignIn=  () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password:'',\r\n        error:'',\r\n        loading:false,\r\n        redirectToRef: false,\r\n    })\r\n\r\n    const {email, password, error, loading, redirectToRef} = values\r\n    const {user} = isValidated();\r\n\r\n    //Update state data from form\r\n    const handleChange = val => e =>{\r\n        setValues({...values,error: false,[val]: e.target.value})\r\n    }\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        setValues({...values, error: false, loading: true});\r\n\r\n        signIn({email,password})\r\n            .then(content => {\r\n                if (content.error){\r\n                    setValues({...values,error: content.error, loading: false})\r\n                }\r\n                else{\r\n                    validate(content, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToRef: true\r\n                        });\r\n                    } );\r\n                    refreshPage();\r\n                }\r\n            });\r\n    }\r\n\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const signInForm = () =>(\r\n        <Container >\r\n            <Row>\r\n                <Col >\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control onChange={handleChange('email')}  type=\"email\" placeholder=\"Enter email\" value={email}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={handleChange('password')}  type=\"password\" placeholder=\"Password\" value={password}/>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                            SignIn\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n    const errorMessage = () => (\r\n        <Alert variant=\"danger\" style={{display: error ? '' : 'none'}}>\r\n            {error}\r\n        </Alert>\r\n    );\r\n\r\n    const loadingMessage = () => (\r\n        loading && (\r\n            <Alert variant=\"info\">\r\n                 <h2>Loading....</h2>\r\n             </Alert>\r\n        )\r\n    );\r\n\r\n    const userRedirect = () => {\r\n        if (redirectToRef){\r\n            if (user && user.userType === \"admin\"){\r\n                return <Redirect to =\"/admin/admindashboard\" ></Redirect>\r\n            }\r\n            else if (user && user.userType === \"manager\"){\r\n                return <Redirect to =\"/manager/managerdashboard\"></Redirect>\r\n            }\r\n            else {\r\n                return <Redirect to =\"/user/userdashboard\"></Redirect>\r\n            }\r\n        }\r\n        if (isValidated()) {\r\n            return <Redirect to =\"/\"></Redirect>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Sign In\" description=\"Welcome to Aubrella\"\r\n                className=\"container col-md-6 offset-md-3\">\r\n            {errorMessage()}\r\n            {loadingMessage()}\r\n            {userRedirect()}\r\n            {signInForm()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, {useState} from 'react';\r\nimport Layout from \"../ui/Layout\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {signUp} from \"../../validators\";\r\n\r\nconst SignUp=  () => {\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName:'',\r\n        email: '',\r\n        password:'',\r\n        error:'',\r\n        success:false\r\n    })\r\n\r\n    const {firstName, lastName, email, password, success, error} = values\r\n\r\n    //Update state data from form\r\n    const handleChange = val => e =>{\r\n         setValues({...values,error: false,[val]: e.target.value})\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault(); //Prevent browser from reloading\r\n        setValues({...values,error: false});\r\n\r\n        signUp({firstName,lastName,email,password})\r\n            .then(content => {\r\n                if (content.error){\r\n                    setValues({...values,error: content.error, success: false})\r\n                }\r\n                else{\r\n                    setValues({ //Reset values in form\r\n                        ...values,\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        email: '',\r\n                        password: '',\r\n                        error: '',\r\n                        success: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const signUpForm = () =>(\r\n        <Container >\r\n            <Row>\r\n            <Col >\r\n                <Form>\r\n                <Form.Group controlId=\"formBasicFName\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control onChange={handleChange('firstName')} type=\"text\" placeholder=\"Enter First Name\" value={firstName}  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicLName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control onChange={handleChange('lastName')}  type=\"text\" placeholder=\"Enter Last Name\" value={lastName}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control onChange={handleChange('email')}  type=\"email\" placeholder=\"Enter email\" value={email}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control onChange={handleChange('password')}  type=\"password\" placeholder=\"Password\" value={password}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                    SignUp\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n    );\r\n\r\n    const errorMessage = () => (\r\n            <Alert variant=\"danger\" style={{display: error ? '' : 'none'}}>\r\n                {error}\r\n            </Alert>\r\n    );\r\n\r\n    const successMessage = () => (\r\n        <Alert variant=\"info\" style={{display: success ? '' : 'none'}}>\r\n            Account created successfully. Please <Link to=\"/signIn\">Signin</Link>\r\n        </Alert>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Sign Up\" description=\"Welcome to Aubrella\"\r\n        className=\"container col-md-6 offset-md-3\">\r\n            {errorMessage()}\r\n            {successMessage()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import {API} from \"../Config\";\r\nimport queryString from 'query-string'\r\n\r\n/*\r\n    method:GET\r\n    retrieve all the products based on the order by condition\r\n */\r\nexport const getProducts = (orderBy) =>{\r\n    return fetch(`${API}/products?sortBy=${orderBy}&order=desc&limit=6`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\n/*\r\n    method:GET\r\n    retrieve product details according to product id\r\n */\r\nexport const getUniquePro = (productID) =>{\r\n    return fetch(`${API}/product/${productID}`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\n\r\n export const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n         method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`}     })\r\n        .then(response => {\r\n            return response.json();\r\n       })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n       method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n         body: JSON.stringify(paymentData)\r\n    })\r\n         .then(response => {\r\n             return response.json();\r\n        })\r\n         .catch(err => console.log(err));\r\n};\r\n\r\n//create order\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({order:createOrderData})\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n// retrieve item list depending on the condition passed from the search bar\r\nexport const itemList = queryParams =>{\r\n    const searchQuery = queryString.stringify(queryParams)\r\n    console.log('searchQuery',searchQuery)\r\n    return fetch(`${API}/retrieveproduct/search?${searchQuery}`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n\r\n        })\r\n        .catch(err=> console.log(err));\r\n\r\n}\r\n\r\nexport const getCheckedResults = (skip,limit,filters={}) => {\r\n\r\n    const bodyData = {\r\n       skip,limit,filters\r\n    }\r\n\r\n    return fetch(`${API}/products/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n\r\n        },\r\n        body: JSON.stringify(bodyData)\r\n\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n};\r\n","import {API} from \"../Config\";\r\n\r\n/*\r\n    method:POST\r\n    pass all the form data\r\n */\r\nexport const addProduct  = (userId,token,product) => {\r\n    return fetch(`${API}/product/add/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n/*\r\n    method:GET\r\n    retrieve all the categories\r\n */\r\nexport const getCategories = () =>{\r\n    return fetch(`${API}/categoryList`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\n/*\r\n    method:GET\r\n    get all the products to be displayed to manage products\r\n */\r\nexport const getProducts= () =>{\r\n    return fetch(`${API}/products?limit=100`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\n/*\r\n    method:GET\r\n    get a particular product with a id\r\n */\r\nexport const getAProduct= (productID) =>{\r\n    return fetch(`${API}/product/${productID}`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\n/*\r\n    method:PUT\r\n    update a particular product\r\n */\r\nexport const updateProduct = (productId , userId , token,newProduct) =>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method: \"PUT\",\r\n        headers :{\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: newProduct\r\n\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n/*\r\n    method:DELETE\r\n    delete a particular product\r\n */\r\nexport const deleteProduct = (productId , userId , token) =>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method: \"DELETE\",\r\n        headers :{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n//Get the order list\r\nexport const ordersList=(userId,token)=>{\r\n    return fetch(`${API}/order/list/${userId}`,{\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response=>{\r\n            return response.json();\r\n        })\r\n        .catch(err=>console.log(err));\r\n};\r\n","//add to cart with creating in local storage\r\nexport const addItem = (item,next) =>{\r\n\r\n    let cart =[];\r\n    if(typeof window!=='undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            cart=JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        cart = Array.from(new Set(cart.map((p)=>(p._id)))).map(id=>{\r\n            return cart.find(p =>p._id===id)\r\n        });\r\n\r\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\r\n        next();\r\n    }\r\n};\r\n//To return the number of items in the cart\r\nexport const itemTotal =() =>{\r\n    if(typeof window!=='undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n           return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\nreturn 0;\r\n};\r\n//to refresh the page\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\n//empty the cart\r\nexport const emptyCart = next => {\r\n    if (typeof window !== \"undefined\"){\r\n        localStorage.removeItem(\"cart\");\r\n        refreshPage();\r\n        next();\r\n    }\r\n};\r\n//delete the cart\r\nexport const deleteCart=x=>{\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"cart\");\r\n    }\r\n};\r\n//get the items of the cart\r\nexport const getCart =() =>{\r\n    if(typeof window!=='undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n//Configure the quantity of each item in the cart\r\nexport  const updateCartItem =(productId, count)=>{\r\n  let cart=[];\r\n    if (typeof window !='undefined'){\r\n        if (localStorage.getItem('cart')){\r\n            cart =JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n        cart.map((product, i)=>{\r\n           if (product._id===productId){\r\n               cart[i].count=count;\r\n           }\r\n        });\r\n        localStorage.setItem('cart',JSON.stringify(cart));\r\n    }\r\n\r\n};\r\n//To delete the respective item in the cart\r\nexport  const removeCartItem =(productId)=>{\r\n    let cart=[];\r\n    if (typeof window !='undefined'){\r\n        if (localStorage.getItem('cart')){\r\n            cart =JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n        cart.map((product, i)=>{\r\n            if (product._id===productId){\r\n                cart.splice(i,1);\r\n            }\r\n        });\r\n        localStorage.setItem('cart',JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n","import React, {useEffect,useState} from 'react'\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport {API} from \"../../Config\";\r\n\r\nfunction DisplayRating(props) {\r\n\r\n    //hold state\r\n    const [allRatings, setRatings] = useState([]);\r\n\r\n    //get added ratings\r\n     const getRatings = () =>{\r\n        return fetch(`${API}/rating/getAll`,{\r\n            method: \"GET\"\r\n        })\r\n            .then(response =>{\r\n                return response.json();\r\n            })\r\n            .catch(err=> console.log(err));\r\n    }\r\n\r\n    //load the rating\r\n    const loadRatings = () =>{\r\n         getRatings().then(content => {\r\n             if(content.error){\r\n                 console.log(\"error\");\r\n             }else{\r\n                 setRatings(content);\r\n             }\r\n         })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRatings();\r\n    },[])\r\n\r\n\r\n\r\n    return(\r\n\r\n\r\n                <div>\r\n\r\n                    {allRatings.map((ratings, index ) => {\r\n\r\n                        if(ratings._id === props.pID ){\r\n\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <StarRatingComponent\r\n                                            name=\"rate1\"\r\n                                            starCount={5}\r\n                                            size=\"10\"\r\n                                            value={ratings.avg}\r\n                                            className=\"mr-5\"\r\n                                        />\r\n                                    </div>\r\n                                )\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    )}\r\n\r\n                </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default DisplayRating\r\n","import React, { useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {API} from \"../../Config\";\r\nimport moment from 'moment'\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport {addItem,updateCartItem,removeCartItem} from \"./cartHandler\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {addWishItem, removeWishlistItem} from \"./WishlistHandler\";\r\nimport {isValidated} from \"../../validators\";\r\nimport DisplayRating from \"./DisplayRating\";\r\n\r\n\r\n\r\n\r\n//check stock availability and render\r\nconst stockAvailabilty = (quantity) =>{\r\n    return (quantity > 0 ?\r\n                <Badge  pill variant=\"primary\">In Stock</Badge>: <Badge pill variant=\"warning\">Out of stock</Badge>\r\n    )\r\n\r\n}\r\n\r\n//check if discount applied and render\r\nconst checkDiscount = (discount, totPrice) =>{\r\n   if(discount> 0){\r\n       return(\r\n           <h4>\r\n               <Badge pill className=\"iconPM\"  variant=\"danger\">Discounted Price : {totPrice}</Badge>\r\n           </h4>\r\n       )\r\n   }\r\n}\r\n\r\n\r\nconst ProductCard = ({\r\n                         product,\r\n                         viewProductBtn=true,\r\n                         addToCartBtn=true,\r\n                         updateCartOpt=false,\r\n                         removeItemBtn=false,\r\n                         addToWishListBtn=true,\r\n                         removeWishItemBtn=false,\r\n                         setRun =f=>f,\r\n                         run=undefined\r\n}) =>{\r\n    //creating add to cart\r\n    const [ redirect, setRedirect]= useState(false);\r\n    const [count, setCount]=useState(product.count);\r\n    const [ wredirect, setWRedirect]= useState(false);\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const {user,token} = isValidated();\r\n\r\n    const addToWishListButton=(addWish)=>{\r\n        if(user && user.userType === 'user'  ){\r\n            return(\r\n                addWish && <Button className=\"form-control mb-2\" variant=\"outline-warning\" onClick={addToWishList}>Add to Wish List</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const addToCartButton=(addCart)=>{\r\n        if(user && user.userType === 'user'){\r\n            return(\r\n                addCart && <Button className=\"form-control\" variant=\"success\" onClick={addToCart}>Add to cart</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const addToCart =()=>{\r\n        addItem(product, ()=>{\r\n                setRedirect(true)\r\n        })\r\n   };\r\n\r\n    const addToWishList =()=>{\r\n        addWishItem(product, ()=>{\r\n            setWRedirect(true)\r\n        })\r\n\r\n    };\r\n    const userCartRedirect = redirect=>{\r\n        if(redirect){\r\n            return <Redirect to=\"/cart\"/>\r\n        }\r\n    };\r\n\r\n    const userWishRedirect = wredirect=>{\r\n        if(wredirect){\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n    };\r\n//increament and decreament values\r\n    const handleChange = productId => event =>{\r\n        setRun(!run);\r\n        setCount(event.target.value <1 ? 1: event.target.value)\r\n        if(event.target.value>=1){\r\n            updateCartItem(productId,event.target.value)\r\n        }\r\n    }\r\n\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    return<div className=\"form-group\" style={{margin:25}}>\r\n\r\n        <div className=\"shadow bg-light rounded\">\r\n\r\n            {userCartRedirect(redirect)}\r\n            {userWishRedirect(wredirect)}\r\n            <div className=\"card border-secondary mb-3\" style={{ width: '25rem'}}>\r\n            <img className=\"card-img-top\" style={{maxHeight:\"50%\" }} src={`${API}/product/image/${product._id}`} alt=\"productImage\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">{product.productDesc.substring(0,100)}</p>\r\n                    <p className=\"card-text\">Rs.{product.productPrice}</p>\r\n                    <p className=\"card-text\">Category :{product.productCat && product.productCat.categoryName}</p>\r\n                    <p className=\"card-text\">Product: Added {moment(product.createdAt).fromNow()} </p>\r\n                    <DisplayRating pID={product._id} />\r\n                    <div className=\"card-footer bg-transparent border-danger\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <div className=\"p-2\">{stockAvailabilty(product.productQuantity)}</div>\r\n                           {checkDiscount(product.productDisc, product.totalDiscPrice)}\r\n                        </div>\r\n                        <br/><br/>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            {\r\n                                viewProductBtn &&    <Button className=\"form-control mb-2\" variant=\"outline-dark\" >View Product</Button>\r\n                            }\r\n                        </Link>\r\n\r\n                        {addToWishListButton(addToWishListBtn)}\r\n                        {addToCartButton(addToCartBtn)}\r\n\r\n                        {\r\n                            removeItemBtn && <Button className=\"form-control\" variant=\"danger\"\r\n                                                     onClick={()=>{removeCartItem(product._id);setRun(!run);refreshPage()}}>\r\n                                Remove</Button>\r\n                        }\r\n\r\n                        {\r\n                            updateCartOpt && <div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\">Adjust Quantity</span>\r\n                                    </div>\r\n                                    <input type=\"number\" className=\"form-control m-1\" value={count} onChange={handleChange(product._id)}/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            removeWishItemBtn && <Button className=\"form-control mt-2\" variant=\"danger\"\r\n                                                     onClick={()=>{removeWishlistItem(product._id);setRun(!run);refreshPage()}}>\r\n                                Remove</Button>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n             </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default ProductCard\r\n","//add to wishlist with creating in local storage\r\nexport const addWishItem = (item,next) =>{\r\n\r\n    let wishlist =[];\r\n    if(typeof window!=='undefined'){\r\n        if(localStorage.getItem('wishlist')){\r\n            wishlist=JSON.parse(localStorage.getItem('wishlist'))\r\n        }\r\n        wishlist.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        wishlist = Array.from(new Set(wishlist.map((p)=>(p._id)))).map(id=>{\r\n            return wishlist.find(p =>p._id===id)\r\n        });\r\n\r\n        localStorage.setItem(\"wishlist\",JSON.stringify(wishlist))\r\n        next();\r\n    }\r\n};\r\n//return the item count in the wishlist\r\nexport const itemWishTotal =() =>{\r\n    if(typeof window!=='undefined') {\r\n        if (localStorage.getItem('wishlist')) {\r\n            return JSON.parse(localStorage.getItem('wishlist')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n//delete the wishlist from local storage\r\nexport const deleteWishlist=x=>{\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"wishlist\");\r\n    }\r\n};\r\n\r\n//getting wishlist items\r\nexport const getWishlist =() =>{\r\n    if(typeof window!=='undefined') {\r\n        if (localStorage.getItem('wishlist')) {\r\n            return JSON.parse(localStorage.getItem('wishlist'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\n//To delete the respective item in the wishlist\r\nexport  const removeWishlistItem =(productId)=>{\r\n    let wishlist=[];\r\n    if (typeof window !='undefined'){\r\n        if (localStorage.getItem('wishlist')){\r\n            wishlist =JSON.parse(localStorage.getItem('wishlist'))\r\n        }\r\n        wishlist.map((product, i)=>{\r\n            if (product._id===productId){\r\n                wishlist.splice(i,1);\r\n            }\r\n        });\r\n        localStorage.setItem('wishlist',JSON.stringify(wishlist));\r\n    }\r\n    return wishlist;\r\n};\r\n","import React,{useEffect,useState} from 'react';\r\nimport {getCategories}from '../../FrontEndAPIs/storeManagerApi'\r\nimport {itemList}from '../../FrontEndAPIs/apiCore'\r\nimport {Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ProductCard from \"./proCard\";\r\n\r\n\r\nconst SearchComp = () =>{\r\n    // state initialized\r\n    const [values, setValues] = useState({\r\n        aCategory:'',\r\n        allCategories : [],\r\n        searchVal:'',\r\n        resultData:[],\r\n        didSearch:false\r\n    })\r\n    // retrieve the values from state\r\n    const {aCategory,allCategories,searchVal,resultData,didSearch} = values\r\n\r\n    //retrieve the categories and set the allCategories with retrieved data\r\n    const getAllCategories = () =>{\r\n        getCategories().then(res =>{\r\n            if(res.error){\r\n                console.log(res.error)\r\n            }else{\r\n                setValues({...res,allCategories: res})\r\n            }\r\n        })\r\n    }\r\n\r\n    //on componentdidmount run the below method and populates state\r\n    useEffect(() =>{\r\n        getAllCategories();\r\n    },[])\r\n\r\n    //if user start typing or selects a category pick that change\r\n    //function returning a function\r\n    const handleChange = (val) => e =>{\r\n        setValues({...values,[val]:e.target.value, didSearch: false})\r\n\r\n\r\n    }\r\n\r\n    //when form is submitted\r\n    const searchValue = (e) =>{\r\n\r\n        e.preventDefault()\r\n        retrieveData();\r\n    }\r\n\r\n    //method to pass the query and retrieve data\r\n    const retrieveData = () =>{\r\n        if(!didSearch){\r\n            itemList({searchVal: searchVal || undefined, aCategory: aCategory})\r\n                .then(response =>{\r\n                    if(response.error){\r\n                        console.log(response.error)\r\n                    }else{\r\n                        setValues({...values, resultData:response, didSearch: true})\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const displaySearched = (resultData = []) =>{\r\n\r\n        return(\r\n            <div>\r\n                <h2 className=\"mt-4 mb-5\">\r\n                    {informUser(didSearch,resultData)}\r\n                </h2>\r\n                <Row>\r\n                    {resultData.map((product ,index) =>(\r\n                        <ProductCard key={index} product={product}/>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    const informUser = (didSearch, resultData) =>{\r\n        if(didSearch && resultData.length > 0 && resultData.length < 2){\r\n            return `Found ${resultData.length} Product`\r\n        }\r\n        if(didSearch && resultData.length > 1){\r\n            return `Found ${resultData.length} Products`\r\n        }\r\n        if(didSearch && resultData.length < 1){\r\n            return `No Products Found`\r\n        }\r\n\r\n    }\r\n\r\nconst searchForm = () =>(\r\n    <Form inline onSubmit={searchValue}>\r\n        <span className=\"input-group-text rounded-top\" style={{ backgroundColor:'#eceff1', padding:12}}>\r\n            <div className=\"input-group input-group-sm\">\r\n                <div className=\"input-group-prepend\">\r\n                     <FormControl type=\"text\" placeholder=\"All Your Fashion Needs Under One Roof\" className=\"mr-2\" style={{height:40, width:400}} onChange={handleChange('searchVal')} />\r\n                     <Button className=\"text-light bg-dark rounded \" type=\"submit\">Search</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </span>\r\n\r\n    </Form>\r\n);\r\n\r\n    return(\r\n\r\n      <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n              <div className=\" mb-3\">{searchForm()}</div>\r\n          </div>\r\n          <div className='container-fluid mb-3'>\r\n              {displaySearched(resultData)}\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchComp;\r\n","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\nimport poster11 from './Image/poster11.jpg'\r\nimport poster10 from './Image/poster10.png'\r\nimport poster8 from './Image/poster8.jpg'\r\nimport poster9 from './Image/poster9.png'\r\nimport poster12 from './Image/poster12.jpg'\r\nimport './slide.css'\r\n\r\nconst fadeImages = [\r\n    poster11,\r\n    poster10,\r\n    poster8,\r\n    poster9,\r\n    poster12\r\n\r\n];\r\n\r\nconst zoomOutProperties = {\r\n    duration: 3000,\r\n    transitionDuration: 500,\r\n    infinite: true,\r\n    indicators:true,\r\n    scale: 0.4,\r\n    arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n    return (\r\n        <div className=\"slide-container\">\r\n            <Zoom {...zoomOutProperties} >\r\n                {\r\n                    fadeImages.map((each, index) => <img key={index} style={{width: \"100%\"}} src={each}  alt=\"images\"/>)\r\n\r\n                }\r\n            </Zoom>\r\n        </div>\r\n    )\r\n}\r\nexport default SlideShow;","import React,{useEffect,useState} from 'react';\r\nimport {getProducts} from '../../FrontEndAPIs/apiCore'\r\nimport { Row} from \"react-bootstrap\";\r\nimport SearchComp from \"./Search\";\r\nimport  Card from './proCard'\r\nimport SlideShow from '../slideshow/SlideShow'\r\n\r\nconst Home=  () => {\r\n\r\n    //create state to hold the following values\r\n    const [productsArrival, accessProductsArrival] = useState([])\r\n    const [soldProducts, accessSoldProducts] = useState([])\r\n    const [error, accessError] = useState(false)\r\n\r\n\r\n    //function to load products according to Arrival\r\n    const productsLoadByArrival = () =>{\r\n        getProducts('createdAt').then(data =>{\r\n            if(data.error){\r\n                accessError(data.error)\r\n            }\r\n            else{\r\n                accessProductsArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    //function to load products according to sold quantity\r\n    const productsLoadBySold = () =>{\r\n        getProducts('soldQuantity').then(data=>{\r\n            if(data.errors){\r\n                accessError(data.error)\r\n            }\r\n            else{\r\n                accessSoldProducts(data)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //run the above 2 methods when the component mounts\r\n    useEffect(() =>{\r\n        productsLoadBySold()\r\n        productsLoadByArrival()\r\n    },[]);\r\n\r\n\r\n    return (\r\n\r\n    <div>\r\n            <div className=\"img-fluid mt-5 mb-5\">\r\n             <SlideShow/>\r\n            </div>\r\n                <SearchComp/>\r\n\r\n            <h2 className=\"mb-4 ml-4\">Best Sellers</h2>\r\n\r\n                <Row className=\"mb-5 ml-5\">\r\n                    {soldProducts.map((product,index) =>(\r\n                        <Card key={index} product={product}/>\r\n                    ))}\r\n\r\n                </Row>\r\n\r\n        <br/><br/><br/>\r\n\r\n            <h2 className=\"mb-4  ml-4\">New Arrivals</h2>\r\n            <Row className=\"mb-5 ml-5\">\r\n                {productsArrival.map((product,index) =>(\r\n                    <Card  key={index} product={product}/>\r\n                ))}\r\n            </Row>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {signOut, isValidated} from \"../../validators\";\r\nimport {itemTotal,deleteCart} from \"./cartHandler\";\r\nimport {deleteWishlist, itemWishTotal} from \"./WishlistHandler\";\r\n\r\n\r\nconst isActive = (history,path) => {\r\n    if(history.location.pathname === path){\r\n        return {color:'#ff6d00', textDecoration: 'none'}\r\n    }else{\r\n        return {color:'#fafafa' , textDecoration: 'none'}\r\n    }\r\n}\r\n\r\nfunction Menus({history}) {\r\n    return (\r\n        <div>\r\n\r\n        <Navbar className=\"py-3 dark bg-dark fixed-top \"  style={{height:50}}>\r\n\r\n            <Nav className=\"mr-auto  py-0\">\r\n                    <Nav.Link\r\n                        as={Link} style={isActive(history,\"/\")} to=\"/\"> Home\r\n                    </Nav.Link>\r\n\r\n                    <Nav.Link\r\n                        as={Link} style={isActive(history,\"/productshop\")} to=\"/productshop\"> Store\r\n                    </Nav.Link>\r\n\r\n                    {/*Show link to user dashboard when signed in*/}\r\n                    {isValidated() && isValidated().user.userType === \"user\" && (\r\n                        <Nav.Link\r\n                            as={Link} style={isActive(history,\"/user/userdashboard\")} to=\"/user/userdashboard\">Dashboard\r\n                        </Nav.Link>\r\n                    )}\r\n\r\n                    {/*Show link to manager dashboard if user type is manager*/}\r\n                    {isValidated() && isValidated().user.userType === \"manager\" && (\r\n                        <Nav.Link\r\n                            as={Link}style={isActive(history,\"/manager/managerdashboard\")} to=\"/manager/managerdashboard\">Dashboard\r\n                        </Nav.Link>\r\n                    )}\r\n\r\n                    {/*Show link to admin dashboard if user type is admin*/}\r\n                    {isValidated() && isValidated().user.userType === \"admin\" && (\r\n                        <Nav.Link\r\n                            as={Link} style={isActive(history,\"/admin/admindashboard\")} to=\"/admin/admindashboard\">Dashboard\r\n                        </Nav.Link>\r\n                    )}\r\n\r\n                    {isValidated() && isValidated().user.userType === \"user\" && (\r\n                    <Nav.Link\r\n                        as={Link}style={isActive(history,\"/cart\")} to=\"/cart\">Cart <sup><small>{itemTotal()}</small></sup>\r\n                    </Nav.Link>\r\n                    )}\r\n\r\n                    {isValidated() && isValidated().user.userType === \"user\" && (\r\n                        <Nav.Link\r\n                            as={Link} style={isActive(history,\"/wishlist\")} to=\"/wishlist\">Wishlist <sup><small>{itemWishTotal()}</small></sup>\r\n                        </Nav.Link>\r\n                    )}\r\n\r\n\r\n                <Nav.Link\r\n                    as={Link} style={{color:'#fafafa' , textDecoration: 'none' }} className=\"nav abs-center-x  rainbow\" to=\"/\"> <b><i>AUBRELLA </i></b>\r\n                </Nav.Link>\r\n            </Nav>\r\n\r\n            {/*Hide signout when user not logged in*/}\r\n            {!isValidated() && (\r\n                <Fragment>\r\n                    <Nav.Link\r\n                        as={Link}  to=\"/signin\" style={isActive(history,\"/signin\")} className=\"nav ml-auto\" >Sign In\r\n                    </Nav.Link>\r\n\r\n                    <Nav.Link\r\n                        as={Link} to=\"/signup\" style={isActive(history,\"/signup\")}>Sign Up\r\n                    </Nav.Link>\r\n                </Fragment>\r\n            )}\r\n\r\n            {/*Hide signin and signup when logged in*/}\r\n            {isValidated() && (\r\n                <Nav.Link\r\n                    as={Link} to=\"/signin\" style={isActive(history,\"/signin\")} onClick={() => signOut(() => {\r\n                        deleteCart();\r\n                    deleteWishlist()})}>Sign Out\r\n                </Nav.Link>\r\n            )}\r\n        </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Menus);\r\n","import React,{Component} from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {isValidated} from \"./index\";\r\n\r\n//Checks if user is authenticated and redirect them to the desired component.\r\n// If not authenticated redirect to sign in page\r\nconst UserRoute = ({component: Component,...rest}) => (\r\n    <Route {...rest} render={props => isValidated() ? (\r\n        <Component {...props}></Component>\r\n    ) : (\r\n        <Redirect to={{pathname: \"/signin\", state: {from : props.location} }}>\r\n        </Redirect>\r\n    )}>\r\n    </Route>\r\n)\r\n\r\nexport default UserRoute;\r\n","import {API} from \"../Config\";\r\n\r\nexport const listUserData = (id, token) =>{\r\n    return fetch(`${API}/user/${id}`,{\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n};\r\n\r\n\r\nexport const updateUserData = (id, token, user) =>{\r\n    return fetch(`${API}/user/${id}`,{\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n};\r\n\r\n//Update user data in localstorage\r\nexport const userUpdate = (user, next) => {\r\n    if (typeof window !== 'undefined'){\r\n        if (localStorage.getItem('jwt')){\r\n            let validate = JSON.parse(localStorage.getItem('jwt'))\r\n            validate.user = user\r\n            localStorage.setItem('jwt', JSON.stringify(validate))\r\n            next()\r\n        }\r\n    }\r\n};\r\n\r\nexport const getUserHistory = (id, token) =>{\r\n    return fetch(`${API}/orders/by/user/${id}`,{\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getUserHistory} from \"../../FrontEndAPIs/apiUser\"\r\nimport moment from \"moment\";\r\n\r\nconst UserDashboard = () => {\r\n\r\n    const [history,setHistory]=useState([]);\r\n\r\n    const {user: {_id,firstName,lastName,email,userType}} = isValidated();\r\n\r\n    const token=isValidated().token;\r\n\r\n    const init=(userId,token)=>{\r\n        getUserHistory(userId,token)\r\n            .then(data=>{\r\n                if(data.error){\r\n                    console.log(data.error)\r\n                }else{\r\n                    setHistory(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        init(_id,token);\r\n    },[])\r\n\r\n    const userLinks = () => {\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">User Links</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to={`/UserProfile/${_id}`}>Update Profile</Link>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userInformation = () => {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">User Information</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>{firstName}</ListGroup.Item>\r\n                        <ListGroup.Item>{lastName}</ListGroup.Item>\r\n                        <ListGroup.Item>{email}</ListGroup.Item>\r\n                        <ListGroup.Item>{userType}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userHistory = (history) => {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">Purchase History</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            {history.map((h, i) => {\r\n                                return (\r\n                                    <div>\r\n                                        <hr />\r\n                                        {h.products.map((p, i) => {\r\n                                            return (\r\n                                                <div key={i}>\r\n                                                    <h6>Product name: {p.productName}</h6>\r\n                                                    <h6>Product price: ${p.productPrice}</h6>\r\n                                                    <h6>\r\n                                                        Purchased date:{\" \"}\r\n                                                        {moment(p.createdAt).fromNow()}\r\n                                                    </h6>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Welcome to Aubrella\" description={`Hello ${firstName}`} className=\"container\">\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={3}>{userLinks()} </Col>\r\n                    <Col sm={9}> {userInformation()} {userHistory(history)}</Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UserDashboard;\r\n","import React,{Component} from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {isValidated} from \"./index\";\r\n\r\n//Checks if user is authenticated and an admin and redirect them to the desired component.\r\n// If not authenticated redirect to sign in page\r\nconst AdminRoute = ({component: Component,...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isValidated() && isValidated().user.userType === \"admin\" ? (\r\n        <Component {...props}></Component>\r\n    ) : (\r\n        <Redirect to={{pathname: \"/signin\", state: {from : props.location} }}>\r\n        </Redirect>\r\n    )}>\r\n    </Route>\r\n)\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const {user: {_id,firstName,lastName,email,userType}} = isValidated()\r\n\r\n    const adminLinks = () => {\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">Admin Links</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to=\"/category/add\"> Add Categories</Link>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to=\"/create/storemanager\">Store Manager Management</Link>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to={`/admin/update/${_id}`}>Update Profile</Link>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">User Information</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>{firstName}</ListGroup.Item>\r\n                        <ListGroup.Item>{lastName}</ListGroup.Item>\r\n                        <ListGroup.Item>{email}</ListGroup.Item>\r\n                        <ListGroup.Item>{userType}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Hello ${firstName}`} className=\"container\">\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={3}>{adminLinks()} </Col>\r\n                    <Col sm={9}> {adminInfo()}</Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst StoreManagerDashboard = () => {\r\n\r\n    const {user: {_id,firstName,lastName,email,userType}} = isValidated()\r\n\r\n    const managerLinks = () => {\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">Manager Links</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to=\"/products/add\">Add Products</Link>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to=\"/storemanager/manageproducts\">Edit Products</Link>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Link className=\"nav-link\" to={`/storemanager/updatepass/${_id}`}>Edit Profile</Link>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup>\r\n                       <ListGroup.Item>\r\n                          <Link className=\"nav-link\" to=\"/storemanager/orders\">View Orders</Link>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const managerInfo = () => {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">User Information</Card.Header>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>{firstName}</ListGroup.Item>\r\n                        <ListGroup.Item>{lastName}</ListGroup.Item>\r\n                        <ListGroup.Item>{email}</ListGroup.Item>\r\n                        <ListGroup.Item>{userType}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout title=\"Welcome to Aubrella\" description={`Hello ${firstName}`} className=\"container\">\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={3}>{managerLinks()} </Col>\r\n                    <Col sm={9}> {managerInfo()}</Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default StoreManagerDashboard;\r\n","import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {isValidated} from \"./index\";\r\n\r\n//Checks if user is a manager and authenticated and redirect them to the desired component.\r\n// If not authenticated redirect to sign in page\r\nconst StoreManagerRoute = ({component: Component,...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isValidated() && isValidated().user.userType === \"manager\" ? (\r\n                <Component {...props}></Component>\r\n            ) : (\r\n                <Redirect to={{pathname: \"/signin\", state: {from : props.location} }}>\r\n                </Redirect>\r\n            )}>\r\n    </Route>\r\n)\r\n\r\nexport default StoreManagerRoute;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Layout from \"../ui/Layout\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {Alert, Badge, ListGroup} from \"react-bootstrap\";\r\nimport {signUp} from \"../../validators\";\r\nimport {getManagers, deleteManager} from \"../../FrontEndAPIs/adminApi\";\r\nimport {isValidated} from \"../../validators\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MangerSignUp=  () => {\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName:'',\r\n        email: '',\r\n        password:'',\r\n        userType:'manager',\r\n        error:'',\r\n        success:false\r\n    })\r\n\r\n    const {user, token} = isValidated();\r\n    const [allManagers ,setManagers] = useState([]);\r\n    const {firstName, lastName, email, password,userType, success, error} = values\r\n\r\n    const getAllManagers = () =>{\r\n        getManagers().then(res =>{\r\n            if(res.error){\r\n                console.log(res.error)\r\n            }else{\r\n                setManagers(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    const removeManager = managerID =>{\r\n        deleteManager(managerID,user._id,token).then(\r\n            res =>{\r\n                if(res.error){\r\n                    console.log(res.error);\r\n                }else{\r\n                    getAllManagers();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //Grab the category id when the component mounts\r\n    useEffect(() =>{\r\n        getAllManagers()\r\n    }, [])\r\n\r\n    const handleChange = val => e =>{\r\n        setValues({...values,error: false,[val]: e.target.value})\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        setValues({...values,error: false});\r\n\r\n        signUp({firstName,lastName,email,password,userType})\r\n            .then(content => {\r\n                if (content.error){\r\n                    setValues({...values,error: content.error, success: false})\r\n                }\r\n                else{\r\n                    setValues({\r\n                        ...values,\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        email: '',\r\n                        password: '',\r\n                        userType: 'manager',\r\n                        error: '',\r\n                        success: true\r\n                    })\r\n                }\r\n                refreshPage()\r\n            })\r\n    }\r\n\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const signUpForm = () =>(\r\n        <Container>\r\n            <Row>\r\n                <Col style={{marginLeft:-300}}>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicFName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control onChange={handleChange('firstName')} type=\"text\" placeholder=\"Enter First Name\" value={firstName}  />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicLName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control onChange={handleChange('lastName')}  type=\"text\" placeholder=\"Enter Last Name\" value={lastName}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control onChange={handleChange('email')}  type=\"email\" placeholder=\"Enter email\" value={email}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={handleChange('password')}  type=\"password\" placeholder=\"Password\" value={password}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicUserType\">\r\n                            <Form.Label>User Type</Form.Label>\r\n                            <Form.Control disabled   type=\"text\" placeholder=\"User Type\" value=\"manager\"/>\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                            Add Manager\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col style={{marginTop:50,marginRight: -300}}>\r\n                    <ListGroup variant=\"flush\">\r\n                        {allManagers.map((manager,index) =>(\r\n                            <ListGroup.Item key = {index} className=\"d-flex justify-content-between\">\r\n                                <strong>{manager.firstName} &nbsp;</strong>\r\n                                <strong>{manager.lastName}</strong>\r\n                                <Link>\r\n                                    <span className=\"cursor-pointer\" onClick={() => removeManager(manager._id)}>\r\n                                    <Badge variant=\"danger\">Remove</Badge></span>\r\n                                </Link>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n    const errorMessage = () => (\r\n        <Alert variant=\"danger\" style={{display: error ? '' : 'none'}}>\r\n            {error}\r\n        </Alert>\r\n    );\r\n\r\n    const successMessage = () => (\r\n        <Alert variant=\"info\" style={{display: success ? '' : 'none'}}>\r\n            Account created successfully.\r\n        </Alert>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Store Manager Management\" description=\"\" className=\"container col-md-6 offset-md-3\">\r\n            {errorMessage()}\r\n            {successMessage()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default MangerSignUp;\r\n","import {API} from \"../Config\";\r\n\r\nexport const addCategory = (userId,token,productCategory) => {\r\n    return fetch(`${API}/category/add/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(productCategory)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n};\r\n\r\nexport const getManagers = () =>{\r\n    return fetch(`${API}/list/storemanager`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n\r\nexport const deleteManager = (managerId,userId ,token) =>{\r\n    return fetch(`${API}/user/storemanager/delete/${managerId}/${userId}`,{\r\n        method: \"DELETE\",\r\n        headers :{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n};\r\n\r\nexport const getCategories = () =>{\r\n    return fetch(`${API}/categoryList`,{\r\n        method: \"GET\"\r\n    })\r\n        .then(response =>{\r\n            return response.json();\r\n        })\r\n        .catch(err=> console.log(err));\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport {Alert, Col, Container, ListGroup, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {addCategory, getCategories} from \"../../FrontEndAPIs/adminApi\";\r\n\r\nconst CategoryManagement = () => {\r\n    const [categoryName, setName] = useState('')\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [allCategories, setCategories] = useState([]);\r\n\r\n    //destructure user amd token from localstorage\r\n    const {user, token} = isValidated();\r\n\r\n    const getAllCategories = () =>{\r\n        getCategories().then(res =>{\r\n            if(res.error){\r\n                console.log(res.error)\r\n            }else{\r\n                setCategories(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    //Grab the category id when the component mounts\r\n    useEffect(() =>{\r\n        getAllCategories()\r\n    }, [])\r\n\r\n    //Grab form values and set the state\r\n    const handleChange = (e) => {\r\n        setError('');\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess(false);\r\n\r\n        //request api to create category\r\n        addCategory(user._id,token,{categoryName})\r\n            .then(content => {\r\n                if (content.error){\r\n                    setError(true);\r\n                }\r\n                else {\r\n                    setError('');\r\n                    setSuccess(true);\r\n                    setName('');\r\n                }\r\n                refreshPage();\r\n            })\r\n    }\r\n\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const categoryForm = () => (\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{marginTop:50,marginLeft:-300}}>\r\n                        <Form onSubmit={submitForm}>\r\n                            <Form.Group controlId=\"formBasicName\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control onChange={handleChange} type=\"text\" placeholder=\"Enter Name\" value={categoryName} required/>\r\n                            </Form.Group>\r\n                            <Button variant=\"outline-success\" type=\"submit\">\r\n                                Create Category\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                    <Col style={{marginTop:50,marginRight: -300}}>\r\n                        <ListGroup variant=\"flush\">\r\n                            {allCategories.map((category,index) =>(\r\n                                <ListGroup.Item key = {index}>\r\n                                    {category.categoryName}\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n    );\r\n\r\n    const errorMessage = () => {\r\n        if(error){\r\n            return(\r\n                <Alert variant=\"danger\">\r\n                    This category already exists\r\n                </Alert>\r\n            )\r\n        }\r\n    };\r\n\r\n    const successMessage = () => {\r\n        if(success){\r\n            return(\r\n                <Alert variant=\"success\">\r\n                    Category created successfully\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Category Dashboard\" description={`Hello ${user.firstName}`} className=\"container col-md-6 offset-md-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        {successMessage()}\r\n                        {errorMessage()}\r\n                        {categoryForm()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CategoryManagement;\r\n","import React, {useEffect,useState} from 'react'\r\nimport { Tooltip } from 'antd';\r\nimport Axios from \"axios\";\r\nimport {API} from \"../../Config\";\r\nimport {LikeFilled, LikeOutlined} from \"@ant-design/icons\";\r\nimport DislikeFilled from \"@ant-design/icons/lib/icons/DislikeFilled\";\r\nimport DislikeOutlined from \"@ant-design/icons/lib/icons/DislikeOutlined\";\r\n\r\nfunction LikesDislikes(props) {\r\n    //hold state\r\n    const [Likes,setLikes] = useState(0)\r\n    const [Dislikes,setDislikes] = useState(0)\r\n    const [LikeAction,setLikeAction] = useState(null)\r\n    const [DislikeAction,setDislikeAction] = useState(null)\r\n\r\n    let variable = {\r\n        commentId:props.commentId,\r\n        userId:props.userId\r\n    };\r\n\r\n    //checking and getting comments\r\n    useEffect(() => {\r\n        Axios.post(`${API}/like/getLikes`,variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setLikes(response.data.likes.length)\r\n\r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId){\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                }else{\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post(`${API}/like/getDislikes`,variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    response.data.dislikes.map(like => {\r\n                        if (like.userId === props.userId){\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                }else{\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n    },[])\r\n\r\n    //like action\r\n    const onLike = () => {\r\n        if (LikeAction ===null){\r\n            Axios.post(`${API}/like/uplike`,variable)\r\n            .then(response => {\r\n                if (response.data.success){\r\n                    setLikes(Likes+1)\r\n                    setLikeAction('liked')\r\n\r\n                    if (DislikeAction !== null) {\r\n                        setDislikeAction(null)\r\n                        setDislikes(Dislikes-1)\r\n                    }\r\n                }else{\r\n                    alert(\"failed to increase the like\")\r\n                }\r\n            })\r\n        }else{\r\n            Axios.post(`${API}/like/unlike`,variable)\r\n            .then(response => {\r\n                if (response.data.success){\r\n                    setLikes(Likes-1)\r\n                    setLikeAction(null)\r\n                }else{\r\n                    alert(\"failed to decrease the like\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //dislike action\r\n    const onDislike = () => {\r\n        if (DislikeAction !== null){\r\n\r\n            Axios.post(`${API}/like/undislike`,variable)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        setDislikes(Dislikes-1)\r\n                        setDislikeAction(null)\r\n                    }else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n        }else{\r\n            Axios.post(`${API}/like/updislike`,variable)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        setDislikes(Dislikes+1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        if (LikeAction !== null){\r\n                            setLikeAction(null)\r\n                            setLikes(Likes-1)\r\n                        }\r\n                    }else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <React.Fragment>\r\n                <span key=\"comment-basic-like\">\r\n                    <Tooltip title=\"like\">\r\n                        {LikeAction === 'liked'? <LikeFilled/> : <LikeOutlined onClick={onLike}/>}\r\n                    </Tooltip>\r\n                    <span style={{paddingLeft:'8px', cursor:'auto'}}>{Likes}</span>\r\n                </span>&nbsp;&nbsp;\r\n                <span key=\"comment-basic-dislike\">\r\n                    <span key=\"comment-basic-like\">\r\n                        <Tooltip title=\"dislikes\">\r\n                            {DislikeAction === 'disliked'? <DislikeFilled/> : <DislikeOutlined onClick={onDislike}/>}\r\n                        </Tooltip>\r\n                    <span style={{paddingLeft:'8px', cursor:'auto'}}>{Dislikes}</span>\r\n                </span>&nbsp;&nbsp;\r\n                </span>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikesDislikes\r\n","import React, {useState}from 'react'\r\nimport {Comment, Avatar, Button, Input} from 'antd'\r\nimport axios from 'axios';\r\nimport {API} from \"../../Config\";\r\nimport LikesDislikes from \"./LikeDislikes\";\r\nimport {isValidated} from \"../../validators\";\r\n\r\nconst {TextArea} = Input;\r\n\r\nfunction SingleComment(props) {\r\n\r\n    const {user,token} = isValidated();\r\n\r\n    //hold state\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n\r\n    //reply comment dropdown\r\n\r\n    const openReply = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    //on comment submit action\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            writer: props.user,\r\n            postId: props.postId,\r\n            responseTo: props.comment._id,\r\n            content: CommentValue\r\n        }\r\n\r\n\r\n        axios.post(`${API}/comments/saveComment`, variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setCommentValue(\"\")\r\n                    setOpenReply(!OpenReply)\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('Failed to save Comment')\r\n                }\r\n            })\r\n    }\r\n\r\n    //get the comment value\r\n    const handleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    const  actions = [\r\n        <LikesDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')}/>,\r\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to </span>\r\n    ]\r\n\r\n    return(\r\n        <div>\r\n            <Comment\r\n    actions={actions}\r\n    author=\"USER\"\r\n    avatar={\r\n        <Avatar\r\n            src=\"dw\"\r\n            alt=\"image\"\r\n        />\r\n    }\r\n    content={\r\n        <p>\r\n            {props.comment.content}\r\n        </p>\r\n    }\r\n    />\r\n\r\n            {OpenReply &&\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={CommentValue}\r\n                    placeholder=\"write some comments\"\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\r\n            </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    //hold state\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n\r\n    //reply count\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n\r\n    let renderReplyComment = (parentCommentId) =>\r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                    <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    //get reply comment\r\n    const handleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {ChildCommentNumber > 0 &&\r\n            <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n               onClick={handleChange} >\r\n                View {ChildCommentNumber} more comment(s)\r\n            </p>\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n            renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","import React , {useState} from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {isValidated} from \"../../validators\";\r\nimport {API} from \"../../Config\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Layout from \"./Layout\";\r\n\r\nfunction Comments(props) {\r\n\r\n\r\n    //hold state\r\n    const user = isValidated() && isValidated().user._id\r\n\r\n    const [Comment, setComment] = useState(\"\");\r\n\r\n    //get value\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value);\r\n    }\r\n\r\n    //on comment submit action\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            content: Comment,\r\n            writer: user._id,\r\n            postId: props.postId,\r\n        }\r\n\r\n        axios.post(`${API}/comments/saveComment`,variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComment(\"\")\r\n                    console.log(response)\r\n                    props.refreshFunction(response.data.result)\r\n                }else {\r\n                    alert('Failed to save comment')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <div>\r\n                        <br/>\r\n                        <p> Comments </p>\r\n                        <hr/>\r\n\r\n\r\n                        {props.CommentLists && props.CommentLists.map((comment, index) => (\r\n                            (!comment.responseTo &&\r\n                                <div key={index}>\r\n                                    <React.Fragment>\r\n                                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                                    </React.Fragment>\r\n                                </div>\r\n                            )\r\n                        ))}\r\n\r\n\r\n                        <form style={{display: 'flex'}} onSubmit={onSubmit}>\r\n                            <TextArea\r\n                                style={{width: '100%' , borderRadius: '5px',marginBottom:30}}\r\n                                onChange={handleChange}\r\n                                value={Comment}\r\n                                placeholder = \"write a comment\"\r\n                                />\r\n                                <Button style={{width: '20%',height: '52px'}} onClick={onSubmit}>Submit</Button>\r\n                        </form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Comments;\r\n","import React, {useEffect,useState} from 'react'\r\nimport Axios from \"axios\";\r\nimport {API} from \"../../Config\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {isValidated} from \"../../validators\";\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nfunction Rating(props) {\r\n    //hold state\r\n    const [Rating,setRating] = useState(0)\r\n    const [Ratings,setRatings] = useState(0)\r\n    const [RatingAction,setRatingAction] = useState(null)\r\n    const {user, token} = isValidated();\r\n    const [allRatings, setAllRatings] = useState([]);\r\n\r\n    let variables = {\r\n        productId:props.productId,\r\n    };\r\n\r\n    //checking and getting ratings\r\n    useEffect(() => {\r\n        Axios.post(`${API}/rating/getRatings`,variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setRatings(response.data.ratings.length)\r\n\r\n                    response.data.ratings.map(like => {\r\n                        if (like.userId === props.userId){\r\n                            setRatingAction('rated')\r\n                        }\r\n                    })\r\n                }else{\r\n                    alert('Failed to get ratings')\r\n                }\r\n            })\r\n\r\n\r\n\r\n    },[Rating])\r\n\r\n\r\n    //rating action\r\n    const onRate = (nextValue, prevValue, name) => {\r\n\r\n        setRating(nextValue)\r\n\r\n        let variable = {\r\n            productId:props.productId,\r\n            userId:user._id,\r\n            noOfStars:nextValue\r\n        };\r\n\r\n        console.log(variable)\r\n\r\n        if (RatingAction ===null){\r\n            Axios.post(`${API}/rating/uprate`,variable)\r\n                .then(response => {\r\n                    if (response.data.success){\r\n                        setRatings(Ratings+1)\r\n                        setRatingAction('rated')\r\n                    }else{\r\n                        alert(\"failed to increase the rating\")\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Container style={{marginBottom: '30px'}}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <div>\r\n                            <br/>\r\n\r\n                            <p> Rate this product </p>\r\n\r\n                            <hr/>\r\n                            <div>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n\r\n\r\n                                    <StarRatingComponent\r\n                                        name=\"rate1\"\r\n                                        starCount={5}\r\n                                        size=\"5\"\r\n                                        value={Rating}\r\n                                        onStarClick={onRate}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React,{useEffect,useState} from 'react';\r\nimport {getUniquePro} from '../../FrontEndAPIs/apiCore'\r\nimport { Row} from \"react-bootstrap\";\r\nimport  Card from './proCard'\r\nimport Comments from \"./Comments\";\r\nimport axios from \"axios\";\r\nimport {API} from \"../../Config\";\r\nimport Rating from \"./Rating\";\r\n\r\n\r\nconst Product = (props) =>{\r\n\r\n    //hold product state\r\n    const [product,giveProduct] = useState({})\r\n    const [err,setError] = useState(false)\r\n    const [CommentLists, setCommentLists] = useState(false)\r\n\r\n\r\n    const productVariable = {\r\n        productId: props.match.params.productid\r\n    }\r\n\r\n    const loadUniqueProduct = productId =>{\r\n\r\n        //method to get one product using API\r\n        getUniquePro(productId).then(data =>{\r\n            if(data.err){\r\n                setError(data.err)\r\n            }else{\r\n                giveProduct(data)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    //grab the product id when the component did mounts\r\n    useEffect(() =>{\r\n        //product id from url\r\n        const productId = props.match.params.productid\r\n        loadUniqueProduct(productId)\r\n\r\n        axios.post(`${API}/comments/getComments`,productVariable)\r\n            .then(response => {\r\n                if (response.data.success){\r\n                    console.log(response.data.product)\r\n                    setCommentLists(response.data.comments)\r\n                }else{\r\n                    alert('Failed to get comments')\r\n                }\r\n            })\r\n    },[])\r\n\r\n    const updateComment = (newComment) => {\r\n        setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n                    <h2 className=\"mb-1 ml-4\"> {product && product.productName}</h2>\r\n                    <Row>\r\n                        <div  style={{margin:'auto'}}>\r\n                            {\r\n                                product &&  product.productDesc && <Card product={product}\r\n                                                                         viewProductBtn={false}/>\r\n                            }\r\n                        </div>\r\n\r\n                    </Row>\r\n\r\n                    <div>\r\n                        <Rating product productId={product._id} userId={localStorage.getItem('userId')} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Comments CommentLists={CommentLists} postId={product._id} refreshFunction={updateComment}/>\r\n                    </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport { Col, Container, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {addProduct,getCategories} from \"../../FrontEndAPIs/storeManagerApi\";\r\nimport bsCustomFileInput from \"bs-custom-file-input\";\r\n\r\n\r\nfunction AddProduct() {\r\n\r\n    //initialize state\r\n    const {user, token} = isValidated();\r\n    const [values, setValues] = useState({\r\n        productName: '',\r\n        productDesc: '',\r\n        productPrice: '',\r\n        categories: [],\r\n        productCat: '',\r\n        shipping: '',\r\n        productQuantity: '',\r\n        productImage: '',\r\n        error: '',\r\n        loading: false,\r\n        productAdded: '',\r\n        formData: '',\r\n        redirectToProfile: false\r\n\r\n    })\r\n\r\n    const {\r\n        productName,\r\n        productDesc,\r\n        productPrice,\r\n        categories,\r\n        productCat,\r\n        shipping,\r\n        productQuantity,\r\n        error,\r\n        loading,\r\n        productAdded,\r\n        formData,\r\n        redirectToProfile\r\n        } = values;\r\n\r\n    //on change set the values\r\n    const handleChange = type => e =>{\r\n        const data = type === 'productImage' ? e.target.files[0] : e.target.value\r\n        formData.set(type,data)\r\n        setValues({...values, [type]:data})\r\n    }\r\n\r\n    //load the categories and send it to the form\r\n    const load = () =>{\r\n        getCategories().then(response =>{\r\n                if(response.error){\r\n                    setValues({...values,error: response.error})\r\n                }\r\n                else{\r\n                    setValues({...values,categories: response , formData: new FormData()})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //execute on component did mount\r\n    useEffect(() =>{\r\n        load();\r\n        bsCustomFileInput.init();\r\n    },[])\r\n\r\n    //method to deal with form submission\r\n    const submitProduct = (e) =>{\r\n        e.preventDefault()\r\n        setValues({...values, error: \"\", loading: true});\r\n\r\n        addProduct(user._id, token , formData)\r\n            .then(formD =>{\r\n                if(formD.error){\r\n                    setValues({...values, error: formD.error})\r\n                }else{\r\n                    setValues({\r\n                        ...values,\r\n                        productName: '',\r\n                        productDesc: '',\r\n                        productPrice: '',\r\n                        productQuantity: '',\r\n                        productImage: '',\r\n                        productCat: '',\r\n                        shipping: '',\r\n                        loading: false,\r\n                        productAdded: formD.productName\r\n\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    //product add form\r\n    const productAddForm= () => (\r\n        <Form  className=\"mb-3\" onSubmit={submitProduct}>\r\n            <Form.Group controlId=\"formBasicProductName\">\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control onChange={handleChange('productName')}  type=\"text\" placeholder=\"Enter Product Name\" value={productName} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicDescription\">\r\n                <Form.Label>Product Description</Form.Label>\r\n                <Form.Control onChange={handleChange('productDesc')}  as=\"textarea\" rows=\"3\" placeholder=\"Enter Product Description\" value={productDesc} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPrice\">\r\n                <Form.Label>Product Price</Form.Label>\r\n                <Form.Control onChange={handleChange('productPrice')} type=\"number\" placeholder=\"Enter Product price\" value={productPrice} />\r\n            </Form.Group>\r\n            <Form.Group  controlId=\"formBasicCategory\">\r\n                <Form.Label>Product Category</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" custom\r\n                    onChange={handleChange('productCat')} >\r\n                    <option >Please Select Product Category</option>\r\n                    {categories && categories.map((cat,index)=>\r\n                        (<option key = {index} value={cat._id}>{cat.categoryName}</option>)\r\n                     )}\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicQuantity\">\r\n                <Form.Label>Product Quantity</Form.Label>\r\n                <Form.Control onChange={handleChange('productQuantity')} type=\"number\" placeholder=\"Select Product quantity\" value={productQuantity} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicShipping\">\r\n                <Form.Label>Product Shipping</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" custom\r\n                              onChange={handleChange('shipping')}   >\r\n                    <option >Please Select Shipping Details</option>\r\n                <option value=\"0\">No</option>\r\n                <option value=\"1\">Yes</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.File\r\n                id=\"custom-file\"\r\n                name=\"productImage\"\r\n                accept=\"image/*\"\r\n                label=\"Upload Image\"\r\n                custom\r\n                onChange={handleChange('productImage')}\r\n            />\r\n            <br/><br/>\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n                Add Product\r\n            </Button>\r\n        </Form>\r\n\r\n    )\r\n\r\n    /*\r\n    methods to execute depending on different conditions\r\n     */\r\n    const Loading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-info\" style={{display : productAdded ? '': 'none'}}>\r\n            <h4>{`${productAdded}`} Successfully Added</h4>\r\n        </div>\r\n    );\r\n\r\n    const errorMessage = () => (\r\n        <div className=\"alert alert-danger\" style={{display : error ? '': 'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Add a Product\" description={`Hello ${user.firstName}, Let's add a new Product`}\r\n                className=\"container col-md-6 offset-md-3\">\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        {Loading()}\r\n                        {successMessage()}\r\n                        {errorMessage()}\r\n                        {productAddForm()}\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AddProduct","import React, {useEffect, useState} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport {Badge, Col, Container, ListGroup, Row} from \"react-bootstrap\";\r\nimport {getProducts, deleteProduct}from '../../FrontEndAPIs/storeManagerApi'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ProductManagement = () =>{\r\n\r\n    //initilaize the state.\r\n    const {user, token} = isValidated();\r\n    const [allProducts ,propProducts ] = useState([]);\r\n\r\n\r\n    //get all the products\r\n    const getTheProducts = () =>{\r\n        getProducts().then(res =>{\r\n            if(res.error){\r\n                console.log(res.error)\r\n            }else{\r\n                propProducts(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    //remove product method\r\n    const removeProduct = productID =>{\r\n        deleteProduct(productID,user._id,token).then(\r\n            res =>{\r\n                if(res.error){\r\n                    console.log(res.error);\r\n                }else{\r\n                    getTheProducts();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //execute on component did mount\r\n    useEffect(() =>{\r\n            getTheProducts()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Layout title=\"Product Manage\" description=\"Manage your products\" className=\"container-fluid\">\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h2 className=\"text-center\">Total Number of Products :{allProducts.length}</h2>\r\n                    <hr/>\r\n                    <ListGroup variant=\"flush\">\r\n                        {allProducts.map((product,index) =>(\r\n                            <ListGroup.Item\r\n                                key = {index}\r\n                                className=\"d-flex justify-content-between\"\r\n                            >\r\n                                <strong>{product.productName}</strong>\r\n                                <Link to={`/storemanager/edit/product/${product._id}`}>\r\n                                    <span>\r\n                                         <Badge variant=\"warning\">Update</Badge>\r\n                                    </span>\r\n\r\n                                </Link>\r\n                                <Link to=\"/storemanager/manageproducts\">\r\n                                    <span className=\"cursor-pointer\" onClick={() => removeProduct(product._id)}><Badge variant=\"danger\">Remove</Badge></span>\r\n                                </Link>\r\n\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n        </Layout>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ProductManagement;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport { Col, Container, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {getCategories,getAProduct,updateProduct} from \"../../FrontEndAPIs/storeManagerApi\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\n\r\nfunction UpdateProduct({match}) {\r\n\r\n//intitialize the state\r\n    const {user, token} = isValidated();\r\n\r\n    const [values, setValues] = useState({\r\n        productName: '',\r\n        productDesc: '',\r\n        productPrice: '',\r\n        productDisc:'',\r\n        totalDiscPrice:'',\r\n        categories: [],\r\n        productCat: '',\r\n        shipping: '',\r\n        productQuantity: '',\r\n        productImage: '',\r\n        error: '',\r\n        loading: false,\r\n        productAdded: '',\r\n        formData: '',\r\n        redirectToProfile: false\r\n\r\n    })\r\n\r\n    const {\r\n        productName,\r\n        productDesc,\r\n        productPrice,\r\n        categories,\r\n        productDisc,\r\n        productCat,\r\n        shipping,\r\n        totalDiscPrice,\r\n        productQuantity,\r\n        error,\r\n        loading,\r\n        productAdded,\r\n        formData,\r\n        redirectToProfile\r\n    } = values;\r\n\r\n\r\n    const handleChange = type => e =>{\r\n        const data = type === 'productImage' ? e.target.files[0] : e.target.value\r\n        formData.set(type,data)\r\n        setValues({...values, [type]:data})\r\n    }\r\n\r\n\r\n\r\n    //load the categories and send it to the form\r\n    const loadCategories = () =>{\r\n        getCategories().then(response =>{\r\n                if(response.error){\r\n                    setValues({...values,error: response.error})\r\n                }\r\n                else{\r\n                    setValues({categories: response , formData: new FormData()})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //load the products first by populating the state and then retrieve all categories\r\n    const loadProduct = (productID) =>{\r\n        getAProduct(productID).then(res => {\r\n                if(res.error){\r\n                    setValues({...values, error: res.error});\r\n                }else{\r\n                    setValues({\r\n                        ...values,\r\n                        productName: res.productName,productDesc:res.productDesc,\r\n                        productCat: res.productCat._id,\r\n                        productPrice: res.productPrice,\r\n                        productDisc: res.productDisc,\r\n                        productQuantity: res.productQuantity,\r\n                        totalDiscPrice: res.totalDiscPrice,\r\n                        shipping: res.shipping,\r\n                        formData: new FormData()\r\n                    })\r\n\r\n                    loadCategories();\r\n                }\r\n        }\r\n        )\r\n    }\r\n\r\n    //when component mounts execute load method\r\n    useEffect(() =>{\r\n        loadProduct(match.params.productID);\r\n        bsCustomFileInput.init();\r\n\r\n\r\n    },[])\r\n\r\n    //method executed on form submission\r\n    const submitProduct = (e) =>{\r\n        e.preventDefault()\r\n        setValues({...values, error: \"\", loading: true});\r\n\r\n        updateProduct(match.params.productID,user._id, token , formData)\r\n            .then(formD =>{\r\n                if(formD.error){\r\n                    setValues({...values, error: formD.error})\r\n                }else{\r\n                    setValues({\r\n                        ...values,\r\n                        productName: '',\r\n                        productDesc: '',\r\n                        productPrice: '',\r\n                        productDisc:'',\r\n                        productQuantity: '',\r\n                        productImage: '',\r\n                        totalDiscPrice:'',\r\n                        error: false,\r\n                        loading: false,\r\n                        productAdded: formD.productName\r\n\r\n\r\n                    });\r\n\r\n                    setTimeout(() => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToProfile: true,\r\n\r\n\r\n                        })\r\n                    }, 1000);\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    //product update form\r\n    const productUpdateForm= () => (\r\n        <Form  className=\"mb-3\" onSubmit={submitProduct}>\r\n            <Form.Group controlId=\"formBasicProductName\">\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control onChange={handleChange('productName')}  type=\"text\" placeholder=\"Enter Product Name\" value={productName} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicDescription\">\r\n                <Form.Label>Product Description</Form.Label>\r\n                <Form.Control onChange={handleChange('productDesc')}  as=\"textarea\" rows=\"3\" placeholder=\"Enter Product Description\" value={productDesc} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPrice\">\r\n                <Form.Label>Product Price</Form.Label>\r\n                <Form.Control onChange={handleChange('productPrice')} type=\"number\" placeholder=\"Enter Product price\" value={productPrice} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicDiscount\">\r\n                <Form.Label>Product Discount</Form.Label>\r\n                    <Form.Control onChange={handleChange('productDisc')} type=\"number\" placeholder=\"Enter Product Discount\" value={productDisc} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicTotDiscount\">\r\n                <Form.Label>Product Price After Discount</Form.Label>\r\n                <Form.Control disabled type=\"number\" step=\"0.01\"  value={totalDiscPrice} />\r\n            </Form.Group>\r\n            <Form.Group  controlId=\"formBasicCategory\">\r\n                <Form.Label>Product Category</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" custom\r\n                              onChange={handleChange('productCat')} >\r\n                    <option >Please Select Product Category</option>\r\n                    {categories && categories.map((cat,index)=>\r\n                        (<option key = {index} value={cat._id}>{cat.categoryName}</option>)\r\n                    )}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicQuantity\">\r\n                <Form.Label>Product Quantity</Form.Label>\r\n                <Form.Control onChange={handleChange('productQuantity')} type=\"number\" placeholder=\"Select Product quantity\" value={productQuantity} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicShipping\">\r\n                <Form.Label>Product Shipping</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" custom\r\n                              onChange={handleChange('shipping')}>\r\n                    <option >Please Select Shipping Details</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.File\r\n                id=\"custom-file\"\r\n                name=\"productImage\"\r\n                accept=\"image/*\"\r\n                label=\"Upload Image\"\r\n                custom\r\n                onChange={handleChange('productImage')}\r\n            />\r\n            <br/><br/>\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n                Update Product\r\n            </Button>\r\n        </Form>\r\n\r\n\r\n    )\r\n    /*\r\n   methods to execute depending on different conditions\r\n    */\r\n    const Loading = () => (\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    const userRedirect = () =>{\r\n        if(redirectToProfile){\r\n            if(!error){\r\n                return ( <Redirect to=\"/\"  />)\r\n            }\r\n        }\r\n\r\n    }\r\n    const successMessage = () => (\r\n        <div className=\"alert alert-info\" style={{display : productAdded ? '': 'none'}}>\r\n            <h4>{`${productAdded}`} Successfully Updated</h4>\r\n        </div>\r\n    );\r\n\r\n    const errorMessage = () => (\r\n        <div className=\"alert alert-danger\" style={{display : error ? '': 'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Layout title=\"Update a Product\" description={`Hello ${user.firstName}, Let's Update a product`}\r\n                className=\"container col-md-6 offset-md-3\">\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        {Loading()}\r\n                        {successMessage()}\r\n                        {errorMessage()}\r\n                        {productUpdateForm()}\r\n                        {userRedirect()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n\r\n\r\n\r\n\r\n)\r\n\r\n\r\n}\r\n\r\nexport default UpdateProduct;","import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {\r\n    getProducts,\r\n    getBraintreeClientToken,\r\n    processPayment,\r\n    createOrder\r\n} from '../../FrontEndAPIs/apiCore';\r\nimport {emptyCart} from \"./cartHandler\";\r\nimport Card from \"./proCard\";\r\nimport {isValidated} from '../../validators';\r\nimport {Link} from \"react-router-dom\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\n\r\nconst Checkout = ({products}) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: false,\r\n        instance: {},\r\n        address: ''\r\n    })\r\n\r\n    const userId = isValidated() && isValidated().user._id\r\n    const token = isValidated() && isValidated().token\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error){\r\n                setData({...data,error: data.error});\r\n            }else {\r\n                setData({clientToken: data.clientToken})\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token)\r\n    }, [])\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.totalDiscPrice;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isValidated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    const delAddress=data.address;\r\n\r\n    const buy = () => {\r\n        setData({loading: true});\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance.requestPaymentMethod().then\r\n        (data => {\r\n                //console.log(data)\r\n                nonce = data.nonce\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMehtodNonce'\r\n                // and also total to be charged\r\n                //console.log('send nonce and total to process : ', nonce, getTotal(products));\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                }\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        //console.log(response);\r\n                        //empty cart\r\n                        //create order\r\n                        const createOrderData={\r\n                            products:products,\r\n                            transaction_id:response.transaction.id,\r\n                            amount:response.transaction.amount,\r\n                            address:delAddress\r\n                        }\r\n\r\n                        createOrder(userId,token,createOrderData)\r\n                            .then(response=>{\r\n                                emptyCart(() => {\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({loading: false,success: true});\r\n                            })\r\n\r\n\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                        setData({loading: false});\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                //console.log('dropin error: ', error)\r\n                setData({...data, error: error.message});\r\n            })\r\n    }\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({...data, error: \"\"})}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery Address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Enter your delivery address here....\"\r\n                        />\r\n                    </div>\r\n                    <DropIn options={{\r\n                        authorization: data.clientToken,\r\n                    }}onInstance={instance => data.instance = instance}/>\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">Pay</button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{display: error ? '' : 'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => {\r\n        return(<div className=\"alert alert-info\" style={{display: success ? '' : 'none'}}>\r\n            Thanks! Your payment was successful!\r\n        </div>)\r\n    }\r\n\r\n        const refreshPage = success =>{\r\n            if(success){\r\n\r\n                    window.location.reload(false);\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    const showLoading = (loading) => loading && <h2>Loading...</h2>\r\n\r\n    return(\r\n        <div>\r\n            <h2>Total: Rs:{getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {refreshPage(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport {getCart} from './cartHandler';\r\nimport Card from \"./proCard\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = () =>{\r\n    const [items, setItems] = useState([]);\r\n\r\n    const[run,setRun]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        setItems(getCart());\r\n    },[run]);\r\n//display cart\r\n    const displayItems=items=>{\r\n        return(\r\n            <div>\r\n                <h3>Items Quantity: {items.length}</h3>\r\n                <h3><Link className=\"btn-success\" to=\"/\">\r\n                    Continue Shopping>></Link></h3>\r\n\r\n                {items.map((product, i)=>(<Card\r\n                    key={i}\r\n                    product={product}\r\n                    addToCartBtn={false}\r\n                    addToWishListBtn={false}\r\n                    updateCartOpt={true}\r\n                    removeItemBtn={true}\r\n                    removeWishItemBtn={false}\r\n                    setRun={setRun}\r\n                    run={run}\r\n\r\n                />))}\r\n            </div>\r\n        )\r\n    };\r\n//empty Massage and link to home page\r\n    const emptyItemMsg=()=>(\r\n        <h3>Your cart is empty. <br/> <Link to=\"/\">\r\n            Continue Shopping</Link></h3>\r\n    );\r\n    return(\r\n        <Layout\r\n            title =\"Shopping Cart\"\r\n            description =\"Manage Your Shopping Cart Items\"\r\n        >\r\n            <body data-spy=\"scroll\" data-target=\".row\" data-offset=\"10\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-sm-1\" >\r\n                </div>\r\n              <div className=\"col-sm-3\" >\r\n                  {items.length>0 ? displayItems(items):emptyItemMsg()}\r\n\r\n              </div>\r\n                <div className=\"col-sm-2\" >\r\n                </div>\r\n\r\n                <div className=\"col-sm-4 \">\r\n                    <h2>Cart Summary</h2>\r\n                    <hr/>\r\n                    <Checkout products={items}/>\r\n                </div>\r\n            </div>\r\n            </body>\r\n        </Layout>\r\n    )\r\n};\r\nexport default Cart;\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport {getWishlist} from './WishlistHandler';\r\nimport Card from \"./proCard\";\r\n\r\n\r\nconst Wishlist = () =>{\r\n    const [items, setItems] = useState([]);\r\n\r\n    const[run,setRun]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        setItems(getWishlist());\r\n\r\n    },[run]);\r\n//display wishlist\r\n    const displayItems=items=>{\r\n        return(\r\n            <div>\r\n                <h3>Items Quantity: {items.length}</h3>\r\n                <h3><Link className=\"btn-success\" to=\"/\">\r\n                    Continue Shopping>></Link></h3>\r\n\r\n                {items.map((product, i)=>(<Card\r\n                    key={i}\r\n                    product={product}\r\n                    addToCartBtn={true}\r\n                    removeItemBtn={false}\r\n                    removeWishItemBtn={true}\r\n                    addToWishListBtn={false}\r\n                    setRun={setRun}\r\n                    run={run}\r\n\r\n                />))}\r\n            </div>\r\n        )\r\n    };\r\n//display the when the wishlist empty\r\n    const emptyItemMsg=()=>(\r\n        <h3>Your Wish List is empty. <br/> <Link to=\"/\">\r\n            Continue Shopping</Link></h3>\r\n    );\r\n    return(\r\n        <Layout\r\n            title =\"Wish List\"\r\n            description =\"Manage Your Items\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\" >\r\n                </div>\r\n                <div  className=\"col-sm-3\">\r\n                    {items.length>0 ? displayItems(items):emptyItemMsg()}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Layout>\r\n    )\r\n};\r\nexport default Wishlist;\r\n","import React, {useState,useEffect} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {listUserData, updateUserData, userUpdate} from \"../../FrontEndAPIs/apiUser\";\r\nimport {isValidated} from \"../../validators\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nconst UserProfile = ({match}) => {\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    })\r\n\r\n    const {token} = isValidated()\r\n    const {firstName,lastName,email,password,success} = values\r\n\r\n    //Load user data to form based on the user id and token\r\n    const init = (userId) => {\r\n        listUserData(userId,token).then(content => {\r\n            if (content.error){\r\n                setValues({...values,error: true})\r\n            }\r\n            else{\r\n                setValues({...values,firstName: content.firstName, lastName: content.lastName,email: content.email })\r\n            }\r\n        })\r\n    }\r\n\r\n    //Grab the user ID\r\n    useEffect(() => {\r\n        init(match.params.userId)\r\n    },[])\r\n\r\n    const handleChanges = firstName => e => {\r\n        setValues({...values, error: false, [firstName]: e.target.value})\r\n    }\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        updateUserData(match.params.userId,token, {firstName, lastName, email, password}).then(content => {\r\n            if (content.error){\r\n                console.log(content.error)\r\n            }\r\n            else {\r\n                userUpdate(content, () => {\r\n                    setValues({...content,firstName: content.firstName, lastName: content.lastName,email: content.email,success: true})\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const userRedirect = (success) => {\r\n        if (success){\r\n           return <Redirect to=\"/user/userdashboard\"/>\r\n        }\r\n    }\r\n\r\n    const updateUserProfile = (firstName,lastName,email,password) => (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicFName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control onChange={handleChanges('firstName')} type=\"text\" value={firstName}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicLName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control onChange={handleChanges('lastName')} type=\"text\" value={lastName}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control disabled onChange={handleChanges('email')}  type=\"email\" value={email} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={handleChanges('password')} type=\"password\" value={password}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"My Profile\" description=\"Update My Profile\" className=\"container-fluid\">\r\n\r\n            <h2 className=\"mb-4 \">Update Profile</h2>\r\n            {updateUserProfile(firstName,lastName,email,password)}\r\n            {userRedirect(success)}\r\n\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\nexport default UserProfile;\r\n","import {listUserData, updateUserData, userUpdate} from \"../../FrontEndAPIs/apiUser\";\r\nimport {isValidated} from \"../../validators\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React, {useState,useEffect} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nconst StoreManagerUserProfile = ({match}) => {\r\n    //initialize state\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    })\r\n    const {token} = isValidated()\r\n    const {firstName,lastName,email,password,success} = values\r\n\r\n    //method to list the store manager details\r\n    const init = (userId) => {\r\n        listUserData(userId,token).then(content => {\r\n            if (content.error){\r\n                setValues({...values,error: true})\r\n            }\r\n            else{\r\n                setValues({...values,firstName: content.firstName, lastName: content.lastName,email: content.email, })\r\n            }\r\n        })    }\r\n\r\n        //execute on component did mount\r\n    useEffect(() => {\r\n        init(match.params.userId)\r\n    },[])\r\n\r\n    //on change set values\r\n    const handleChanges = firstName => e => {\r\n        setValues({...values, error: false, [firstName]: e.target.value})\r\n    }\r\n\r\n    //execute on form submission\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        updateUserData(match.params.userId,token, {firstName, lastName, email, password}).then(content => {\r\n            if (content.error){\r\n                console.log(content.error)\r\n            }\r\n            else {\r\n                userUpdate(content, () => {\r\n                    setValues({...content,firstName: content.firstName, lastName: content.lastName,email: content.email,password:content.password,success: true})\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //redirect if updating successful\r\n    const userRedirect = (success) => {\r\n        if (success){\r\n            return <Redirect to=\"/manager/managerdashboard\"/>\r\n        }\r\n    }\r\n\r\n    //update form\r\n    const updateUserProfile = (firstName,lastName,email,password) => (\r\n        <Form>\r\n            <Form.Group controlId=\"formBasicFName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control onChange={handleChanges('firstName')} type=\"text\" value={firstName}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicLName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control onChange={handleChanges('lastName')} type=\"text\" value={lastName}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control disabled onChange={handleChanges('email')} type=\"email\" value={email}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control onChange={handleChanges('password')} type=\"password\" value={password}/>\r\n            </Form.Group>\r\n            <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                Update\r\n            </Button>\r\n        </Form>\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"Update Stock Manager Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12}>\r\n\r\n                        {updateUserProfile(firstName,lastName,email,password)}\r\n                        {userRedirect(success)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\nexport default StoreManagerUserProfile;\r\n","import React, {useState,useEffect} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {isValidated} from \"../../validators\";\r\nimport {ordersList} from \"../../FrontEndAPIs/storeManagerApi\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Orders=()=>{\r\n    const [orders,setOrders]=useState([]);\r\n    const {user,token}=isValidated();\r\n\r\n//Load th eorder from the DB\r\n    const load=()=>{\r\n        ordersList(user._id,token).then(data=>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                setOrders(data)\r\n            }\r\n        });\r\n    };\r\n    useEffect(()=>{\r\n        load();\r\n    },[]);\r\n//Get the number of orders\r\n    const ordersLength = ()=>{\r\n      if(orders.length>0){\r\n          return(\r\n              <h2 className=\"text-danger \">Number of orders: {orders.length}</h2>\r\n          )\r\n      }else{\r\n          return <h2 className=\"text-danger\">There are no orders yet!</h2>\r\n\r\n      }\r\n    };\r\n    return (\r\n        <Layout title=\"Orders\" description={`Hello ${user.firstName}, Manage Your orders`}\r\n                className=\"container col-md-6 offset-md-3\">\r\n\r\n           <div className=\"row\">\r\n               <div className=\"col-md-8 offset-md-2\">\r\n                   {ordersLength()}\r\n                   {orders.map((o,oIndex)=>{\r\n                       return(\r\n                           <div className=\"mt-5\" key={oIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                               <h4 className=\"mb-5\">\r\n                                   <span className=\"bg-success\">Order ID:{o._id} </span>\r\n                               </h4>\r\n\r\n                               <ul className=\"list-group mb-2\">\r\n                                   <li className=\"list-group-item\">\r\n                                       Amount: Rs:{o.amount}\r\n                                   </li>\r\n                                   <li className=\"list-group-item\">\r\n                                       Ordered by:{o.user.firstName}\r\n                                   </li>\r\n                                   <li className=\"list-group-item\">\r\n                                        Ordered Date: {moment(o.createdAt).fromNow()}\r\n                                   </li>\r\n                                   <li className=\"list-group-item\">\r\n                                      Delivery to: {o.address}\r\n                                   </li>\r\n                               </ul>\r\n                               <h4 className=\"mt-4 mb-4 font-italic\">\r\n                                   Total products in the order: {o.products.length}\r\n                               </h4>\r\n                           </div>\r\n                       );\r\n                   })}\r\n               </div>\r\n\r\n           </div>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Orders;\r\n","import React,{useEffect,useState} from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\nconst Check = ({ checkConditions,categories}) =>{\r\n\r\n    const [isChecked, setCheck] = useState([])\r\n\r\n    /*\r\n    checks if a category is checked or not if so return -1\r\n    if there is no category checked then push the id to the state\r\n    else uncheck the checked id and remove from state\r\n     */\r\n\r\n    const handleCheck = i => () =>{\r\n        const existingCatId = isChecked.indexOf(i)\r\n        const checkedID = [...isChecked ]\r\n\r\n        if(existingCatId === -1){\r\n            checkedID.push(i)\r\n        }else{\r\n            checkedID.splice(existingCatId, 1)\r\n        }\r\n\r\n        setCheck(checkedID)\r\n        //send the List of array to ProductShop\r\n        checkConditions(checkedID)\r\n\r\n    }\r\n\r\n    return categories.map((category,index) =>(\r\n        <div  key={index}>\r\n            <Form >\r\n                <Form.Group id=\"formGridCheckbox\"  >\r\n                    <Form.Check onChange={handleCheck(category._id)} value={isChecked.indexOf(category._id=== -1)} type=\"checkbox\" label={category.categoryName} />\r\n                </Form.Group>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n\r\n    ))\r\n}\r\n\r\nexport default Check;","import React,{useEffect,useState} from 'react';\r\nimport Layout from \"../ui/Layout\";\r\nimport  ProductCard from '../ui/proCard'\r\nimport {getCategories} from '../../FrontEndAPIs/storeManagerApi'\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Check from \"./CheckBoxStore\";\r\nimport {getCheckedResults} from '../../FrontEndAPIs/apiCore'\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\nconst ProductShop= () =>{\r\n\r\n    const [allCat, setAllCat] = useState([]);\r\n    const [error, setError] = useState([]);\r\n    const [myConditions, setMyConditions] = useState({\r\n        conditions:{category :[]}\r\n    })\r\n    const [limit, setLimit] = useState(6);\r\n    const [more, setMore] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n    const [size,setSize] = useState(0);\r\n\r\n\r\n\r\n    const load = () =>{\r\n        getCategories().then(response =>{\r\n                if(response.error){\r\n                   setError(response.error)\r\n                }\r\n                else{\r\n                    setAllCat(response);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const checkConditions = (conditions, conditionBy) =>{\r\n        const newConditions = {...myConditions}\r\n\r\n        newConditions.conditions[conditionBy] = conditions\r\n\r\n\r\n        loadResults(myConditions.conditions)\r\n        setMyConditions(newConditions)\r\n    }\r\n\r\n    const loadResults = (newFilters) =>{\r\n        console.log('new',newFilters)\r\n        getCheckedResults(more,limit,newFilters).then(response =>{\r\n            if(response.error){\r\n                setError(response.error)\r\n            }else{\r\n\r\n                setFilteredResults(response.result);\r\n                setSize(response.size)\r\n                setMore(0);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        load();\r\n        loadResults(more,limit,myConditions.conditions)\r\n    },[])\r\n\r\n\r\n    const loadMoreProducts = () =>{\r\n\r\n        let  morePro = more+limit;\r\n\r\n        getCheckedResults(morePro,limit,myConditions.conditions).then(response =>{\r\n            if(response.error){\r\n                setError(response.error)\r\n            }else{\r\n\r\n                setFilteredResults([...filteredResults,...response.result]);\r\n                setSize(response.size)\r\n                setMore(morePro);\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreBtn= () =>{\r\n        return(\r\n            size> 0 && size>= limit && (\r\n                <Button onClick={loadMoreProducts} className=\"mb-5 ml-3\" variant=\"danger\" >Load More</Button>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-lg-5 ml-5\">\r\n          <Row>\r\n              <div className=\"col-2 mt-5\">\r\n                  <h4>Category Filter</h4>\r\n                  <div style={{marginTop:40}}>\r\n                      <Check  checkConditions={ conditions => checkConditions(conditions,'category')}  categories={allCat}/>\r\n                  </div>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-10 mt-5\">\r\n                 <h2 className=\"mb-3 ml-2\">Products</h2>\r\n                  <Row>\r\n                      {filteredResults.map((product, index) =>(\r\n\r\n                              <ProductCard key={index}  product={product}/>\r\n\r\n                      ))}\r\n                  </Row>\r\n                  <br/>\r\n                  {loadMoreBtn()}\r\n              </div>\r\n          </Row>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ProductShop","import React, {useState,useEffect} from \"react\";\r\nimport Layout from \"../ui/Layout\";\r\nimport {listUserData, updateUserData, userUpdate} from \"../../FrontEndAPIs/apiUser\";\r\nimport {isValidated} from \"../../validators\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nconst UpdateAdmin = ({match}) => {\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    })\r\n\r\n    const {token} = isValidated()\r\n    const {firstName,lastName,email,password,success} = values\r\n\r\n    const init = (userId) => {\r\n        listUserData(userId,token).then(content => {\r\n            if (content.error){\r\n                setValues({...values,error: true})\r\n            }\r\n            else{\r\n                setValues({...values,firstName: content.firstName, lastName: content.lastName,email: content.email })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId)\r\n    },[])\r\n\r\n    const handleChanges = firstName => e => {\r\n        setValues({...values, error: false, [firstName]: e.target.value})\r\n    }\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        updateUserData(match.params.userId,token, {firstName, lastName, email, password}).then(content => {\r\n            if (content.error){\r\n                console.log(content.error)\r\n            }\r\n            else {\r\n                userUpdate(content, () => {\r\n                    setValues({...content,firstName: content.firstName, lastName: content.lastName,email: content.email,success: true})\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const userRedirect = (success) => {\r\n        if (success){\r\n            return <Redirect to=\"/admin/admindashboard\"/>\r\n        }\r\n    }\r\n\r\n    const updateUserProfile = (firstName,lastName,email,password) => (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicFName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control onChange={handleChanges('firstName')} type=\"text\" value={firstName}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicLName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control onChange={handleChanges('lastName')} type=\"text\" value={lastName}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control disabled onChange={handleChanges('email')}  type=\"email\" value={email} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={handleChanges('password')} type=\"password\" value={password}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={submitForm}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"My Profile\" description=\"Update My Profile\" className=\"container-fluid\">\r\n\r\n            <h2 className=\"mb-4 \">Update Profile</h2>\r\n            {updateUserProfile(firstName,lastName,email,password)}\r\n            {userRedirect(success)}\r\n\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\nexport default UpdateAdmin;\r\n","import React from \"react\";\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\r\nimport signIn from './Components/user/SignIn'\r\nimport signUp from './Components/user/signUp'\r\nimport Home from './Components/ui/Home'\r\nimport NavBar from './Components/ui/navBar'\r\nimport UserRoute from \"./validators/UserRoute\";\r\nimport userDashboard from \"./Components/user/UserDashboard\";\r\nimport AdminRoute from \"./validators/AdminRoute\";\r\nimport AdminDashboard from \"./Components/user/AdminDashboard\";\r\nimport StoreManagerDashboard from \"./Components/user/StoreManagerDashboard\";\r\nimport StoreManagerRoute from \"./validators/StoreManagerRoute\";\r\nimport StoreManagerSignUp from './Components/admin/storeManagerSignup.js'\r\nimport CategoryManagement from \"./Components/admin/CategoryManagement\";\r\nimport Product from \"./Components/ui/Product\";\r\nimport AddProduct from \"./Components/storeManager/AddProduct\"\r\nimport ProductManagement from './Components/storeManager/productManagement'\r\nimport UpdateProduct from './Components/storeManager/updateProduct'\r\nimport Cart from \"./Components/ui/Cart\";\r\nimport Wishlist from \"./Components/ui/Wishlist\";\r\nimport UserProfile from './Components/user/UserProfile'\r\nimport StoreManagerUserProfile from './Components/storeManager/updateStoreManager'\r\nimport Orders from \"./Components/storeManager/orders\";\r\nimport ProductShop from './Components/Store/ProductShop'\r\nimport UpdateAdmin from \"./Components/admin/updateAdmin\";\r\n\r\nconst Routes = () =>{\r\n    return(\r\n        <BrowserRouter>\r\n            <NavBar/>\r\n        <Switch>\r\n            <Route path=\"/signin\" exact component={signIn}/>\r\n            <Route path=\"/signup\" exact component={signUp}/>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/product/:productid\" exact component={Product}/>\r\n            <UserRoute path=\"/user/userdashboard\" exact component={userDashboard}/>\r\n            <AdminRoute path=\"/admin/admindashboard\" exact component={AdminDashboard}/>\r\n            <StoreManagerRoute path=\"/manager/managerdashboard\" exact component={StoreManagerDashboard}/>\r\n            <AdminRoute path=\"/category/add\" exact component={CategoryManagement}/>\r\n            <AdminRoute path=\"/create/storemanager\" exact component={StoreManagerSignUp}/>\r\n            <StoreManagerRoute path=\"/products/add\" exact component={AddProduct}/>\r\n            <StoreManagerRoute path=\"/storemanager/manageproducts\" exact component={ProductManagement}/>\r\n            <StoreManagerRoute path=\"/storemanager/edit/product/:productID\" exact component={UpdateProduct}/>\r\n            <Route path=\"/cart\" exact component={Cart}/>\r\n            <Route path=\"/wishlist\" exact component={Wishlist}/>\r\n            <UserRoute path=\"/UserProfile/:userId\" exact component = {UserProfile}/>\r\n            <StoreManagerRoute path=\"/storemanager/updatepass/:userId\" exact component={StoreManagerUserProfile}/>\r\n            <StoreManagerRoute path=\"/storemanager/orders\" exact component={Orders}/>\r\n            <Route path=\"/productshop\" exact component={ProductShop}/>\r\n            <AdminRoute path=\"/admin/update/:userId\" exact component={UpdateAdmin}/>\r\n        </Switch>\r\n    </BrowserRouter>)\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import App from './App';\r\nimport Routes from \"./Routes\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootswatch/dist/materia/bootstrap.min.css\";\r\n\r\ntry{\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Routes />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}catch (e) {\r\n    console.log(e)\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}